"use strict";(self.webpackChunkjupyterlab_nvdashboard=self.webpackChunkjupyterlab_nvdashboard||[]).push([[897],{6897:(e,t,a)=>{a.r(t),a.d(t,{default:()=>V});var n=a(3205),r=a(6029),i=a.n(r),l=a(4085),s=a(7749),o=a(125);async function c(e="",t={}){const a=o.ServerConnection.makeSettings(),n=s.URLExt.join(a.baseUrl,"nvdashboard",e);let r;try{r=await o.ServerConnection.makeRequest(n,t,a)}catch(e){throw new o.ServerConnection.NetworkError(e)}let i=await r.text();if(i.length>0)try{i=JSON.parse(i)}catch(e){console.log("Not a JSON response body.",r)}if(!r.ok)throw new o.ServerConnection.ResponseError(r,i.message||i);return i}var m=a(9982),d=a(4253);function u(e,t){if(e.active&&e.payload&&e.payload.length){const{payload:a,label:n}=e,r=t.labelFormatter?t.labelFormatter(n):n,l=a.map((e=>`${e.name}: ${t.valueFormatter?t.valueFormatter(e.value):e.value}`)),s=a.map((e=>e.color)),o=Math.ceil(l.length/5);return i().createElement("div",{className:"custom-tooltip"},i().createElement("div",{className:"tooltip-title"},r),i().createElement("div",{style:{columnCount:o}},l.map(((e,t)=>i().createElement("div",{key:t,className:"tooltip-value",style:s[t]?{color:`${s[t]}`}:{}},e)))))}return null}const h=["#ff7900","#b30000"],g=["#fecc5c","#bd0026"];var p=a(9496),y=a(7135),v=a.n(y);const w=()=>{const[e,t]=(0,r.useState)([]),[a,n]=(0,r.useState)([]);(0,r.useEffect)((()=>{!async function(){const e=await c("gpu_usage");t(e.memory_usage),n(e.total_memory)}()}),[]),(0,r.useEffect)((()=>{const e=setInterval((()=>{!async function(){const e=await c("gpu_usage");t(e.memory_usage),n(e.total_memory)}()}),1e3);return()=>clearInterval(e)}),[]);const l=e.map(((e,t)=>({name:`GPU ${t}`,memory:e,totalMemory:a[t]}))),s=(0,d.scaleLinear)().range(h),o=l.reduce(((e,t)=>e+t.memory),0),g=e=>`${(0,p.format)(".2s")(e)}B`;return i().createElement("div",{className:"gradient-background"},i().createElement("strong",{className:"chart-title"}," ","GPU Memory: ",g(o)),i().createElement(v(),null,(({height:e,width:t})=>i().createElement(m.BarChart,{layout:"vertical",width:.98*t,height:.95*e,data:l},i().createElement(m.CartesianGrid,{horizontal:!1}),i().createElement(m.XAxis,{type:"number",domain:[0,Math.max(...a)],tickFormatter:g,className:"nv-axis-custom"}),i().createElement(m.YAxis,{type:"category",dataKey:"name",className:"nv-axis-custom"}),i().createElement(m.Tooltip,{cursor:{fill:"transparent"},content:e=>u(e,{valueFormatter:g})}),i().createElement(m.Bar,{dataKey:"memory",barSize:50,isAnimationActive:!1},l.map(((e,t)=>i().createElement(m.Cell,{key:`cell-${t}`,fill:s(parseFloat(e.memory)/parseFloat(e.totalMemory)).toString()}))))))))};class E extends l.ReactWidget{render(){return i().createElement(w,null)}}const x=()=>{const[e,t]=(0,r.useState)([]);(0,r.useEffect)((()=>{!async function(){const e=await c("gpu_utilization");t(e.gpu_utilization)}()}),[]),(0,r.useEffect)((()=>{const e=setInterval((()=>{!async function(){const e=await c("gpu_utilization");t(e.gpu_utilization)}()}),1e3);return()=>clearInterval(e)}),[]);const a=e.map(((e,t)=>({name:`GPU ${t}`,utilization:e}))),n=(0,d.scaleLinear)().domain([0,100]).range(h);return i().createElement("div",{className:"gradient-background"},i().createElement("strong",{className:"chart-title"},"GPU Utilization"),i().createElement(v(),null,(({height:e,width:t})=>i().createElement(m.BarChart,{layout:"vertical",width:.98*t,height:.95*e,data:a},i().createElement(m.CartesianGrid,{horizontal:!1}),i().createElement(m.XAxis,{type:"number",domain:[0,100],tickFormatter:e=>`${e}%`,tick:{fill:"var(--nv-custom-tick-color)"},className:"nv-axis-custom"}),i().createElement(m.YAxis,{type:"category",dataKey:"name",tick:{fill:"var(--nv-custom-tick-color)"},className:"nv-axis-custom"}),i().createElement(m.Tooltip,{cursor:{fill:"transparent"},content:e=>u(e,{valueFormatter:e=>`${e}%`})}),i().createElement(m.Bar,{dataKey:"utilization",barSize:50,isAnimationActive:!1},a.map(((e,t)=>i().createElement(m.Cell,{key:`cell-${t}`,fill:n(parseInt(e.utilization)).toString()}))))))))};class k extends l.ReactWidget{render(){return i().createElement(x,null)}}const b=({data:e,title:t="",yDomain:a,xFormatter:n,yFormatter:r,width:l,height:s,syncId:o,children:c})=>i().createElement(i().Fragment,null,i().createElement("strong",{className:"multi-chart-title"},t),i().createElement(m.LineChart,{data:e,width:.95*l,height:s,syncId:o},i().createElement(m.CartesianGrid,{horizontal:!1}),i().createElement(m.XAxis,{dataKey:"time",tickFormatter:n,className:"nv-axis-custom"}),i().createElement(m.YAxis,{domain:a,tickFormatter:r,className:"nv-axis-custom"}),i().createElement(m.Tooltip,{content:e=>u(e,{labelFormatter:n,valueFormatter:r})}),i().createElement(m.Legend,{verticalAlign:"top",align:"right"}),c,i().createElement(m.Brush,{height:.1,startIndex:Math.max(e.length-10,0),className:"hidden-brush-for-sync"})),i().createElement("hr",{className:"gpu-dashboard-divider"})),f=e=>void 0!==e?`${(0,p.format)(".2s")(e)}B`:"",_=e=>e?new Date(e).toLocaleTimeString():"",A=new l.LabIcon({name:"launcher:gpu-icon",svgstr:'<svg width="26" height="11" viewBox="0 0 26 11" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path fill-rule="evenodd" class="jp-icon0" clip-rule="evenodd" d="M26 0H4V9H6V11H15V9H26V0ZM21.5 7C22.8807 7 24 5.88071 24 4.5C24 3.11929 22.8807 2 21.5 2C20.1193 2 19 3.11929 19 4.5C19 5.88071 20.1193 7 21.5 7Z" fill="#E0E0E0"/>\n<path d="M0 0H3V11H1V2H0V0Z" class="jp-icon0" fill="#E0E0E0"/>\n</svg>\n'}),N=new l.LabIcon({name:"launcher:hbar-icon",svgstr:'<svg id="Layer_1" style="enable-background:new 0 0 30 30;" version="1.1" fill="none" viewBox="0 0 30 30" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n  <g>\n      <line x1="0" y1="0" x2="0" y2="30" stroke-width="1" />\n\n    <rect height="8" id="XMLID_5_" width="20" x="0" y="1" />\n    <rect height="8" id="XMLID_4_" width="10" x="0" y="11" />\n    <rect height="8" id="XMLID_3_" width="24" x="0" y="21" />\n  </g>\n</svg>\n'}),I=new l.LabIcon({name:"launcher:vbar-icon",svgstr:'\x3c!-- Your SVG code --\x3e\n<svg id="Layer_1" style="enable-background:new 0 0 30 30;" fill="none" version="1.1" viewBox="0 0 30 30" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n  <path d="M27,26h-6V5c0-0.552,0.448-1,1-1h4c0-0.552,0.448-1,1-1s1,0.448,1,1V26z" />\n\n  \x3c!-- Additional paths can also use the same CSS variable for stroke color --\x3e\n  <g>\n    <path d="M18,26h-6V13c0-0.552,0.448-1,1-1h4c0-0.552,0.448-1,1-1s1,0.448,1,1V26z" />\n  </g>\n\n  <path d="M9,26H3V9c0-0.552,0.448-1,1-1h4c0-0.552,0.448-1,1-1s1,0.448,1,1V26z" />\n</svg>\n'}),L=new l.LabIcon({name:"launcher:time-series-icon",svgstr:'\x3c!-- Your SVG code --\x3e\n<svg viewBox="0 0 256 256" xmlns="http://www.w3.org/2000/svg">\n  <rect fill="none" height="256" width="256"/>\n  <polyline fill="none" points="224 208 32 208 32 48"  stroke-linecap="round" stroke-linejoin="round" stroke-width="8"/>\n  <polyline fill="none" points="208 64 128 144 96 112 32 176"  stroke-linecap="round" stroke-linejoin="round" stroke-width="8"/>\n  <polyline fill="none" points="208 104 208 64 168 64"  stroke-linecap="round" stroke-linejoin="round" stroke-width="8"/>\n</svg>\n'}),B=new l.LabIcon({name:"launcher:pause-icon",svgstr:'<svg\r\n  xmlns="http://www.w3.org/2000/svg"\r\n  width="20"\r\n  height="20"\r\n  viewBox="0 0 50 50"\r\n  stroke-width="2"\r\n>\r\n  <rect x="10" y="10" width="10" height="30" />\r\n  <rect x="30" y="10" width="10" height="30" />\r\n</svg>\r\n'}),C=new l.LabIcon({name:"launcher:play-icon",svgstr:'<svg\r\n  xmlns="http://www.w3.org/2000/svg"\r\n  width="20"\r\n  height="20"\r\n  viewBox="0 0 50 50"\r\n  stroke-width="2"\r\n>\r\n  <polygon points="10 5, 10 45, 40 25" />\r\n</svg>\r\n'}),F=()=>{var e;const[t,a]=(0,r.useState)([]),[n,s]=(0,r.useState)([]),[o,u]=(0,r.useState)(!1),h=(null===(e=t[0])||void 0===e?void 0:e.gpu_utilization_individual.length)||0;(0,r.useEffect)((()=>{const e=setInterval((async function(){const e=await c("gpu_resource");o?s([...n,e]):(a((t=>(n.length>1&&(t=[...t,...n]),[...t,e]))),s([]))}),1e3);return()=>clearInterval(e)}),[o,n]);const p=()=>{u(!o)},y=(0,d.scaleLinear)().domain([0,h]).range(g);return i().createElement("div",{className:"gradient-background"},i().createElement(v(),null,(({height:e,width:a})=>i().createElement("div",{style:{width:a,height:e}},i().createElement(b,{data:t,title:"GPU Utilization (per Device) [%]",yDomain:[0,100],xFormatter:_,yFormatter:e=>`${e}%`,width:a,height:e/5,syncId:"gpu-resource-sync"},t[0]&&Object.keys(t[0].gpu_utilization_individual).map(((e,t)=>i().createElement(m.Line,{key:t,dataKey:`gpu_utilization_individual[${t}]`,name:`GPU ${t}`,stroke:y(t),type:"monotone",activeDot:{fill:"transparent"},dot:{fill:"transparent"},isAnimationActive:!1})))),i().createElement(b,{data:t,title:"GPU Usage (per Device) [B]",xFormatter:_,yFormatter:f,width:a,height:e/5,syncId:"gpu-resource-sync"},t[0]&&Object.keys(t[0].gpu_memory_individual).map(((e,t)=>i().createElement(m.Line,{key:t,dataKey:`gpu_memory_individual[${t}]]`,name:`GPU ${t}`,stroke:y(t),type:"monotone",activeDot:{fill:"transparent"},dot:{fill:"transparent"},isAnimationActive:!1})))),i().createElement(b,{data:t,title:"Total Utilization [%]",xFormatter:_,yFormatter:e=>`${e}%`,yDomain:[0,100],width:a,height:e/5,syncId:"gpu-resource-sync"},i().createElement(m.Line,{dataKey:"gpu_utilization_total",name:"GPU Utilization Total",stroke:y(0),type:"monotone",strokeWidth:2,activeDot:{fill:"transparent"},dot:{fill:"transparent"},isAnimationActive:!1}),i().createElement(m.Line,{dataKey:"gpu_memory_total",name:"GPU Usage Total",stroke:y(h),strokeWidth:2,activeDot:{fill:"transparent"},dot:{fill:"transparent"},type:"monotone",isAnimationActive:!1})),i().createElement(b,{data:t,title:"Total PCI Throughput [B/s]",xFormatter:_,yFormatter:f,width:a,height:e/5,syncId:"gpu-resource-sync"},i().createElement(m.Line,{dataKey:"rx_total",name:"RX",stroke:y(0),type:"monotone",strokeWidth:2,activeDot:{fill:"transparent"},dot:{fill:"transparent"},isAnimationActive:!1}),i().createElement(m.Line,{dataKey:"tx_total",name:"TX",stroke:y(h),type:"monotone",strokeWidth:2,activeDot:{fill:"transparent"},dot:{fill:"transparent"},isAnimationActive:!1})),i().createElement("div",{style:{display:"flex",alignItems:"center",width:a,height:50}},i().createElement(m.LineChart,{data:t,width:.95*a,syncId:"gpu-resource-sync",height:50,compact:!0},i().createElement(m.XAxis,{dataKey:"time",height:0}),i().createElement(m.YAxis,{height:0}),i().createElement(m.Brush,{dataKey:"time",tickFormatter:_,startIndex:Math.max(t.length-10,0),fill:"none"})),i().createElement(l.Button,{onClick:p,className:"gpu-dashboard-button gpu-dashboard-toolbar-button"},o?i().createElement(C.react,{className:"nv-icon-custom-time-series"}):i().createElement(B.react,{className:"nv-icon-custom-time-series"})))))))};class S extends l.ReactWidget{render(){return i().createElement(F,null)}}const U=()=>{const[e,t]=(0,r.useState)([]),[a,n]=(0,r.useState)([]),[s,o]=(0,r.useState)(!1);(0,r.useEffect)((()=>{const r=setInterval((async function(){let r=await c("cpu_resource");e.length>0&&(r={...r,disk_read_current:r.disk_read-e[e.length-1].disk_read,disk_write_current:r.disk_write-e[e.length-1].disk_write,network_read_current:r.network_read-e[e.length-1].network_read,network_write_current:r.network_write-e[e.length-1].network_write}),s?n([...a,r]):(t((e=>(a.length>1&&(e=[...e,...a]),[...e,r]))),n([]))}),1e3);return()=>clearInterval(r)}),[s,a]);const u=()=>{o(!s)},h=(0,d.scaleLinear)().range(g);return i().createElement("div",{className:"gradient-background"},i().createElement(v(),null,(({height:t,width:a})=>i().createElement("div",{style:{width:a,height:t}},i().createElement(b,{data:e,title:"CPU Utilization [%]",yDomain:[0,100],xFormatter:_,yFormatter:e=>`${e}%`,width:a,height:t/5,syncId:"cpu-resource-sync"},i().createElement(m.Line,{dataKey:"cpu_utilization",name:"CPU Utilization",stroke:h(0),type:"monotone",isAnimationActive:!1})),i().createElement(b,{data:e,title:"Memory Usage [B]",xFormatter:_,yFormatter:f,width:a,height:t/5,syncId:"cpu-resource-sync"},i().createElement(m.Line,{dataKey:"memory_usage",name:"Memory Usage",stroke:h(1),type:"monotone",isAnimationActive:!1})),i().createElement(b,{data:e,title:"Disk I/O Bandwidth [B/s]",xFormatter:_,yFormatter:f,width:a,height:t/5,syncId:"cpu-resource-sync"},i().createElement(m.Line,{dataKey:"disk_read_current",name:"Disk Read",stroke:h(0),type:"monotone",isAnimationActive:!1}),i().createElement(m.Line,{dataKey:"disk_write_current",name:"Disk Write",stroke:h(1),type:"monotone",isAnimationActive:!1})),i().createElement(b,{data:e,title:"Network I/O Bandwidth [B/s]",xFormatter:_,yFormatter:f,width:a,height:t/5,syncId:"cpu-resource-sync"},i().createElement(m.Line,{dataKey:"network_read_current",name:"Network Read",stroke:h(0),type:"monotone",isAnimationActive:!1}),i().createElement(m.Line,{dataKey:"network_write_current",name:"Network Write",stroke:h(1),type:"monotone",isAnimationActive:!1})),i().createElement("div",{style:{width:a,height:50,display:"flex",alignItems:"center"}},i().createElement(m.LineChart,{data:e,width:.95*a,syncId:"cpu-resource-sync",height:50,compact:!0},i().createElement(m.XAxis,{dataKey:"time",height:0}),i().createElement(m.YAxis,{height:0}),i().createElement(m.Brush,{dataKey:"time",tickFormatter:_,startIndex:Math.max(e.length-10,0),fill:"none"})),i().createElement(l.Button,{onClick:u,className:"gpu-dashboard-button gpu-dashboard-toolbar-button"},s?i().createElement(C.react,{className:"nv-icon-custom-time-series"}):i().createElement(B.react,{className:"nv-icon-custom-time-series"})))))))};class P extends l.ReactWidget{render(){return i().createElement(U,null)}}const z=()=>{const[e,t]=(0,r.useState)();(0,r.useEffect)((()=>{!async function(){const e=await c("pci_stats");console.log(e),t(e)}()}),[]),(0,r.useEffect)((()=>{const e=setInterval((()=>{!async function(){const e=await c("pci_stats");t(e)}()}),1e3);return()=>clearInterval(e)}),[]);const a=null==e?void 0:e.pci_tx.length,n=Array.from(Array(a).keys()).map((t=>({name:`GPU ${t}`,rx:(null==e?void 0:e.pci_rx[t])||0,tx:(null==e?void 0:e.pci_tx[t])||0,maxTP:(null==e?void 0:e.max_rxtx_tp)||0}))),l=(0,d.scaleLinear)().domain([0,1]).range(h);return i().createElement("div",{className:"gradient-background"},i().createElement(v(),null,(({height:t,width:a})=>i().createElement("div",{style:{width:a,height:t}},i().createElement("strong",{className:"chart-title multi-chart-title"},"TX PCIe [B/s]"),i().createElement(m.BarChart,{width:.98*a,height:.95*t/2,data:n},i().createElement(m.YAxis,{type:"number",domain:[0,(null==e?void 0:e.max_rxtx_tp)||0],tickFormatter:f,className:"nv-axis-custom"}),i().createElement(m.XAxis,{type:"category",dataKey:"name",className:"nv-axis-custom"}),i().createElement(m.Tooltip,{cursor:{fill:"transparent"},content:e=>u(e,{valueFormatter:f})}),i().createElement(m.Bar,{dataKey:"tx",barSize:50,isAnimationActive:!1},n.map(((e,t)=>i().createElement(m.Cell,{key:`cell-${t}`,fill:l(e.tx/e.maxTP)}))))),i().createElement("strong",{className:"chart-title multi-chart-title"},"RX PCIe [B/s]"),i().createElement(m.BarChart,{width:.98*a,height:.95*t/2,data:n},i().createElement(m.YAxis,{type:"number",domain:[0,(null==e?void 0:e.max_rxtx_tp)||0],tickFormatter:f,className:"nv-axis-custom"}),i().createElement(m.XAxis,{type:"category",dataKey:"name",className:"nv-axis-custom"}),i().createElement(m.Tooltip,{cursor:{fill:"transparent"},content:e=>u(e,{valueFormatter:f})}),i().createElement(m.Bar,{dataKey:"rx",barSize:50,isAnimationActive:!1},n.map(((e,t)=>i().createElement(m.Cell,{key:`cell-${t}`,fill:l(e.rx/e.maxTP)})))))))))};class K extends l.ReactWidget{render(){return i().createElement(z,null)}}const T=()=>{const[e,t]=(0,r.useState)();(0,r.useEffect)((()=>{!async function(){const e=await c("nvlink_throughput");console.log(e),t(e)}()}),[]),(0,r.useEffect)((()=>{const e=setInterval((()=>{!async function(){const e=await c("nvlink_throughput");t(e)}()}),1e3);return()=>clearInterval(e)}),[]);const a=null==e?void 0:e.nvlink_rx.length,n=Array.from(Array(a).keys()).map((t=>({name:`GPU ${t}`,rx:(null==e?void 0:e.nvlink_rx[t])||0,tx:(null==e?void 0:e.nvlink_tx[t])||0,maxTP:(null==e?void 0:e.max_rxtx_bw)||0}))),l=(0,d.scaleLinear)().domain([0,1]).range(h),s=e=>`${(0,p.format)(".2s")(e)}B`;return i().createElement("div",{className:"gradient-background"},i().createElement(v(),null,(({height:t,width:a})=>i().createElement("div",{style:{width:a,height:t}},i().createElement("strong",{className:"chart-title multi-chart-title"},"TX NvLink [B/s]"),i().createElement(m.BarChart,{width:.98*a,height:.95*t/2,data:n},i().createElement(m.YAxis,{type:"number",domain:[0,(null==e?void 0:e.max_rxtx_bw)||0],tickFormatter:s,className:"nv-axis-custom"}),i().createElement(m.XAxis,{type:"category",dataKey:"name",className:"nv-axis-custom"}),i().createElement(m.Tooltip,{cursor:{fill:"transparent"},content:e=>u(e,{valueFormatter:s})}),i().createElement(m.Bar,{dataKey:"tx",barSize:50,isAnimationActive:!1},n.map(((e,t)=>i().createElement(m.Cell,{key:`cell-${t}`,fill:l(e.tx/e.maxTP)}))))),i().createElement("strong",{className:"chart-title multi-chart-title"},"RX NvLink [B/s]"),i().createElement(m.BarChart,{width:.98*a,height:.95*t/2,data:n},i().createElement(m.YAxis,{type:"number",domain:[0,(null==e?void 0:e.max_rxtx_bw)||0],tickFormatter:s,className:"nv-axis-custom"}),i().createElement(m.XAxis,{type:"category",dataKey:"name",className:"nv-axis-custom"}),i().createElement(m.Tooltip,{cursor:{fill:"transparent"},content:e=>u(e,{valueFormatter:s})}),i().createElement(m.Bar,{dataKey:"rx",barSize:50,isAnimationActive:!1},n.map(((e,t)=>i().createElement(m.Cell,{key:`cell-${t}`,fill:l(e.rx/e.maxTP)})))))))))};class $ extends l.ReactWidget{render(){return i().createElement(T,null)}}const G=()=>{var e;const[t,a]=(0,r.useState)([]),[n,s]=(0,r.useState)([]),[o,u]=(0,r.useState)(!1),h=(null===(e=t[0])||void 0===e?void 0:e.nvlink_tx.length)||0;(0,r.useEffect)((()=>{const e=setInterval((async function(){const e=await c("nvlink_throughput");e.time=Date.now(),o?s([...n,e]):(a((t=>(n.length>1&&(t=[...t,...n]),[...t,e]))),s([]))}),1e3);return()=>clearInterval(e)}),[o,n]);const p=()=>{u(!o)},y=(0,d.scaleLinear)().domain([0,h]).range(g);return i().createElement("div",{className:"gradient-background"},i().createElement(v(),null,(({height:e,width:a})=>i().createElement("div",{style:{width:a,height:e}},i().createElement(b,{data:t,title:"TX NvLink (per Device) [B/s]",xFormatter:_,yFormatter:f,width:a,height:e/3,syncId:"gpu-resource-sync"},t[0]&&Object.keys(t[0].nvlink_tx).map(((e,t)=>i().createElement(m.Line,{key:t,dataKey:`nvlink_tx[${t}]`,name:`GPU ${t}`,stroke:y(t),type:"monotone",activeDot:{fill:"transparent"},dot:{fill:"transparent"},isAnimationActive:!1})))),i().createElement(b,{data:t,title:"RX NvLink (per Device) [B/s]",xFormatter:_,yFormatter:f,width:a,height:e/3,syncId:"gpu-resource-sync"},t[0]&&Object.keys(t[0].nvlink_rx).map(((e,t)=>i().createElement(m.Line,{key:t,dataKey:`nvlink_rx[${t}]]`,name:`GPU ${t}`,stroke:y(t),type:"monotone",activeDot:{fill:"transparent"},dot:{fill:"transparent"},isAnimationActive:!1})))),i().createElement("div",{style:{display:"flex",alignItems:"center",width:a,height:50}},i().createElement(m.LineChart,{data:t,width:.95*a,syncId:"gpu-resource-sync",height:50,compact:!0},i().createElement(m.XAxis,{dataKey:"time",height:0}),i().createElement(m.YAxis,{height:0}),i().createElement(m.Brush,{dataKey:"time",tickFormatter:_,startIndex:Math.max(t.length-10,0),fill:"none"})),i().createElement(l.Button,{onClick:p,className:"gpu-dashboard-button gpu-dashboard-toolbar-button"},o?i().createElement(C.react,{className:"nv-icon-custom-time-series"}):i().createElement(B.react,{className:"nv-icon-custom-time-series"})))))))};class D extends l.ReactWidget{render(){return i().createElement(G,null)}}var M=a(7308);const R=({app:e,labShell:t,tracker:a})=>{const n=[];console.log(a),e.commands.addCommand("gpu-dashboard-widget:open",{label:"Open GPU Dashboard Widget",execute:e=>{const{id:t,title:a}=e;r(t,a)}});const r=(r,i)=>{let l;switch(r){case"gpu-memory-widget":l=()=>new E;break;case"gpu-utilization-widget":l=()=>new k;break;case"gpu-resource-widget":l=()=>new S;break;case"machine-resource-widget":l=()=>new P;break;case"pci-throughput-widget":l=()=>new K;break;case"nvlink-throughput-widget":l=()=>new $;break;case"nvlink-throughput-timeseries-widget":l=()=>new D;break;default:return}((r,i,l)=>{const s=a.find((e=>e.id===i));if(s)s.isAttached||t.add(s,"main"),t.activateById(s.id);else{const t=r(),s=new M.MainAreaWidget({content:t});s.title.label=l,s.title.icon=A,s.id=i,e.shell.add(s,"main"),a.add(s),n.push({id:i,title:l,instance:s}),s.disposed.connect((()=>{const e=n.findIndex((e=>e.id===i));console.log(a),-1!==e&&n.splice(e,1)}))}})(l,r,i)},s=(e,t)=>i().createElement("span",{style:{display:"flex"}},i().createElement(e,{className:"nv-icon-custom"}),i().createElement("span",{style:{marginLeft:"10px"}},t));return i().createElement("div",{className:"gpu-dashboard-container"},i().createElement("div",{className:"gpu-dashboard-header"},"GPU Dashboards "),i().createElement("hr",{className:"gpu-dashboard-divider"}),i().createElement(l.Button,{className:"gpu-dashboard-button",onClick:()=>r("gpu-memory-widget","GPU Memory")},s(N.react,"GPU Memory")),i().createElement(l.Button,{className:"gpu-dashboard-button",onClick:()=>r("gpu-utilization-widget","GPU Utilization")},s(N.react,"GPU Utilization")),i().createElement(l.Button,{className:"gpu-dashboard-button",onClick:()=>r("gpu-resource-widget","GPU Resources")},s(L.react,"GPU Resources")),i().createElement(l.Button,{className:"gpu-dashboard-button",onClick:()=>r("machine-resource-widget","Machine Resources")},s(L.react,"Machine Resources")),i().createElement(l.Button,{className:"gpu-dashboard-button",onClick:()=>r("pci-throughput-widget","PCIe Throughput")},s(I.react,"PCIe Throughput")),i().createElement(l.Button,{className:"gpu-dashboard-button",onClick:()=>r("nvlink-throughput-widget","NVLink Throughput")},s(I.react,"NVLink Throughput")),i().createElement(l.Button,{className:"gpu-dashboard-button",onClick:()=>r("nvlink-throughput-timeseries-widget","NVLink Throughput")},s(L.react,"NVLink Throughput")))};class X extends l.ReactWidget{constructor(e,t,a){super(),this.app=e,this.labShell=t,this.tracker=a,this.tracker=a}render(){return i().createElement(R,{app:this.app,labShell:this.labShell,tracker:this.tracker})}}const V={id:"react-widget",description:"A minimal JupyterLab extension using a React Widget.",autoStart:!0,requires:[n.ILabShell],optional:[n.ILayoutRestorer],activate:(e,t,a)=>{const n=new M.WidgetTracker({namespace:"gpu-dashboard-widgets"}),r=new X(e,t,n);r.id="gpu-dashboard",r.title.icon=A,r.title.caption="GPU Dashboards",a&&(a.add(r,"gpu-dashboard"),a.restore(n,{command:"gpu-dashboard-widget:open",args:e=>({id:e.id,title:e.title.label}),name:e=>e.title.label})),t.add(r,"left",{rank:200})}}}}]);