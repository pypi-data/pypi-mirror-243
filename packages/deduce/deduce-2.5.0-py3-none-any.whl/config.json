{
  "adjacent_annotations_slack": "[\\. \\-]?[\\. ]?",
  "resolve_overlap_strategy": {
    "attributes": [
      "priority",
      "length"
    ],
    "ascending": [
      false,
      false
    ]
  },
  "redactor_open_char": "<",
  "redactor_close_char": ">",
  "annotators": {
    "prefix_with_initial": {
      "annotator_type": "token_pattern",
      "group": "names",
      "args": {
        "tag": "prefix+initiaal",
        "skip": ["."],
        "pattern": [
          {
            "lookup": "prefixes"
          },
          {
            "or": [
              {
                "is_initial": true
              },
              {
                "is_initials": true
              }
            ]
          }
        ]
      }
    },
    "prefix_with_interfix": {
      "annotator_type": "token_pattern",
      "group": "names",
      "args": {
        "tag": "prefix+interfix+naam",
        "skip": ["."],
        "pattern": [
          {
            "lookup": "prefixes"
          },
          {
            "lookup": "interfixes"
          },
          {
            "like_name": true
          }
        ]
      }
    },
    "prefix_with_name": {
      "annotator_type": "token_pattern",
      "group": "names",
      "args": {
        "tag": "prefix+naam",
        "skip": ["."],
        "pattern": [
          {
            "lookup": "prefixes"
          },
          {
            "and": [
              {
                "like_name": true
              },
              {
                "neg_lookup": "whitelist"
              }
            ]
          }
        ]
      }
    },
    "interfix_with_name": {
      "annotator_type": "token_pattern",
      "group": "names",
      "args": {
        "tag": "interfix+achternaam",
        "skip": [],
        "pattern": [
          {
            "lookup": "interfixes"
          },
          {
            "and": [
              {
                "lookup": "interfix_surnames"
              },
              {
                "neg_lookup": "whitelist"
              }
            ]
          }
        ]
      }
    },
    "initial_with_capital": {
      "annotator_type": "token_pattern",
      "group": "names",
      "args": {
        "tag": "initiaal+naam",
        "skip": ["."],
        "pattern": [
          {
            "is_initial": true
          },
          {
            "and": [
              {
                "like_name": true
              },
              {
                "neg_lookup": "whitelist"
              },
              {
                "neg_lookup": "prefixes"
              }
            ]
          }
        ]
      }
    },
    "initial_interfix": {
      "annotator_type": "token_pattern",
      "group": "names",
      "args": {
        "tag": "initiaal+interfix+naam",
        "skip": ["."],
        "pattern": [
          {
            "is_initial": true
          },
          {
            "lookup": "interfixes"
          },
          {
            "like_name": true
          }
        ]
      }
    },
    "first_name_lookup": {
      "annotator_type": "multi_token",
      "group": "names",
      "args": {
        "tag": "voornaam",
        "lookup_values": "first_names"
      }
    },
    "surname_lookup": {
      "annotator_type": "multi_token",
      "group": "names",
      "args": {
        "tag": "achternaam",
        "lookup_values": "surnames"
      }
    },
    "person_first_name": {
      "annotator_type": "dd_token_pattern",
      "group": "names",
      "args": {
        "pattern": {
          "module": "deduce.pattern",
          "class": "PersonFirstNamePattern",
          "tag": "voornaam_patient"
        }
      }
    },
    "person_initial_from_name": {
      "annotator_type": "dd_token_pattern",
      "group": "names",
      "args": {
        "pattern": {
          "module": "deduce.pattern",
          "class": "PersonInitialFromNamePattern",
          "tag": "initiaal_patient"
        }
      }
    },
    "person_initials": {
      "annotator_type": "dd_token_pattern",
      "group": "names",
      "args": {
        "pattern": {
          "module": "deduce.pattern",
          "class": "PersonInitialsPattern",
          "tag": "achternaam_patient"
        }
      }
    },
    "person_surname": {
      "annotator_type": "dd_token_pattern",
      "group": "names",
      "args": {
        "pattern": {
          "module": "deduce.pattern",
          "class": "PersonSurnamePattern",
          "tag": "achternaam_patient"
        }
      }
    },
    "name_context": {
      "annotator_type": "annotation_context",
      "group": "names",
      "args": {
        "iterative": true,
        "pattern": [
          {
            "name": "interfix_right",
            "direction": "right",
            "pre_tag": [
              "initiaal",
              "naam"
            ],
            "tag": "{tag}+interfix+achternaam",
            "skip": [".", "-"],
            "pattern": [
              {
                "lookup": "interfixes"
              },
              {
                "like_name": true
              }
            ]
          },
          {
            "name": "initial_left",
            "direction": "left",
            "pre_tag": [
              "initiaal",
              "naam",
              "interfix"
            ],
            "tag": "initiaal+{tag}",
            "skip": ["."],
            "pattern": [
              {
                "is_initial": true
              }
            ]
          },
          {
            "name": "naam_left",
            "direction": "left",
            "pre_tag": [
              "naam"
            ],
            "tag": "naam+{tag}",
            "skip": ["-"],
            "pattern": [
              {
                "and": [
                  {
                    "like_name": true
                  },
                  {
                    "neg_lookup": "whitelist"
                  },
                  {
                    "neg_lookup": "prefixes"
                  }
                ]
              }
            ]
          },
          {
            "name": "naam_right",
            "direction": "right",
            "pre_tag": [
              "prefix",
              "initiaal",
              "interfix",
              "naam"
            ],
            "tag": "{tag}+naam",
            "skip": ["-"],
            "pattern": [
              {
                "and": [
                  {
                    "like_name": true
                  },
                  {
                    "neg_lookup": "whitelist"
                  },
                  {
                    "neg_lookup": "prefixes"
                  }
                ]
              }
            ]
          },
          {
            "name": "prefix_left",
            "direction": "left",
            "pre_tag": [
              "prefix",
              "initiaal",
              "interfix",
              "naam"
            ],
            "tag": "prefix+{tag}",
            "skip": ["."],
            "pattern": [
              {
                "and": [
                  {
                    "lookup": "prefixes"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "placename": {
      "annotator_type": "multi_token",
      "group": "locations",
      "args": {
        "lookup_values": "placenames",
        "tag": "locatie"
      }
    },
    "street_pattern": {
      "annotator_type": "token_pattern",
      "group": "locations",
      "args": {
        "pattern": [
          {
            "re_match": "[A-Z][a-z]+(baan|bolwerk|dam|dijk|dreef|drf|dyk|gr|gracht|hf|hof|kade|laan|ln|markt|mrkt|pad|park|pd|plantsoen|plein|pln|plnts|prk|singel|sngl|st|steeg|stg|str|straat|weg|wg)$"
          }
        ],
        "tag": "straat",
        "priority": 1
      }
    },
    "street_lookup": {
      "annotator_type": "multi_token",
      "group": "locations",
      "args": {
        "lookup_values": "streets",
        "tag": "straat",
        "priority": 1
      }
    },
    "housenumber": {
      "annotator_type": "annotation_context",
      "group": "locations",
      "args": {
        "iterative": true,
        "pattern": [
          {
            "name": "housenumber_right",
            "direction": "right",
            "pre_tag": [
              "straat"
            ],
            "tag": "{tag}+huisnummer",
            "skip": [],
            "pattern": [
              {
                "re_match": "\\d{1,4}$"
              }
            ]
          },
          {
            "name": "housenumber_housenumberletter_right",
            "direction": "right",
            "pre_tag": [
              "straat"
            ],
            "tag": "{tag}+huisnummer+huisnummerletter",
            "skip": [],
            "pattern": [
              {
                "re_match": "\\d{1,4}[a-zA-Z]$"
              }
            ]
          },
          {
            "name": "housenumberletter_right",
            "direction": "right",
            "pre_tag": [
              "huisnummer"
            ],
            "tag": "{tag}+huisnummerletter",
            "skip": [],
            "pattern": [
              {
                "re_match": "[a-zA-Z]$"
              }
            ]
          }
        ]
      }
    },
    "postal_code": {
      "annotator_type": "regexp",
      "group": "locations",
      "args": {
        "regexp_pattern": "(\\d{4}([A-Za-z]{2}| [A-Z]{2}))(?<!mg|MG|gr|ie)(\\W|$)",
        "capturing_group": 1,
        "tag": "locatie"
      }
    },
    "postbus": {
      "annotator_type": "regexp",
      "group": "locations",
      "args": {
        "regexp_pattern": "([Pp]ostbus\\s\\d{1,5}(\\.\\d{2,4})?)",
        "tag": "locatie"
      }
    },
    "hospital": {
      "annotator_type": "multi_token",
      "group": "institutions",
      "args": {
        "lookup_values": "hospitals",
        "tag": "instelling"
      }
    },
    "institution": {
      "annotator_type": "multi_token",
      "group": "institutions",
      "args": {
        "lookup_values": "healthcare_institutions",
        "tag": "instelling"
      }
    },
    "date_dmy_1": {
      "annotator_type": "regexp",
      "group": "dates",
      "args": {
        "regexp_pattern": "(?<!\\d)(([1-9]|0[1-9]|[12][0-9]|3[01])(?P<sep>[-/\\. ])([1-9]|0[1-9]|1[012])(?P=sep)((19|20|\\'|`)?\\d{2}))(?!\\d)",
        "tag": "datum",
        "capturing_group": 1
      }
    },
    "date_dmy_2": {
      "annotator_type": "regexp",
      "group": "dates",
      "args": {
        "regexp_pattern": "(?i)(?<!\\d)(([1-9]|0[1-9]|[12][0-9]|3[01])[-/\\. ]{,2}(januari|jan|februari|feb|maart|mrt|april|apr|mei|juni|jun|juli|jul|augustus|aug|september|sep|sept|oktober|okt|november|nov|december|dec)[-/\\. ]((19|20|\\'|`)?\\d{2}))(?!\\d)",
        "tag": "datum",
        "capturing_group": 1
      }
    },
    "date_ymd_1": {
      "annotator_type": "regexp",
      "group": "dates",
      "args": {
        "regexp_pattern": "(?<!\\d)(((19|20|\\'|`)\\d{2})(?P<sep>[-/\\. ])([1-9]|0[1-9]|1[012])(?P=sep)([1-9]|0[1-9]|[12][0-9]|3[01]))(\\D|$)",
        "tag": "datum",
        "capturing_group": 1
      }
    },
    "date_ymd_2": {
      "annotator_type": "regexp",
      "group": "dates",
      "args": {
        "regexp_pattern": "(?i)(?<!\\d)(((19|20|\\'|`)\\d{2})[-/\\. ]{,2}(januari|jan|februari|feb|maart|mrt|april|apr|mei|juni|jun|juli|jul|augustus|aug|september|sep|sept|oktober|okt|november|nov|december|dec)[-/\\. ]([1-9]|0[1-9]|[12][0-9]|3[01]))(?!\\d)",
        "tag": "datum",
        "capturing_group": 1
      }
    },
    "age": {
      "annotator_type": "custom",
      "group": "ages",
      "args": {
        "module": "deduce.annotator",
        "class": "RegexpPseudoAnnotator",
        "regexp_pattern": "(?i)(?<![\\d,\\.])((1?\\d?\\d)([\\.,]5)?(-(1?\\d?\\d)([\\.,]5)?)?)([ -](jarige|jarig|jaar|jr))(?!\\w)",
        "pre_pseudo": ["sinds", "vanaf", "controle", "policontrole", "gedurende", "de", "over", "elke", "nog", "na", "al", "up", "ongeveer", "<"],
        "post_pseudo": ["geleden", "na", "naar", "nadien", "aanwezig", "getrouwd", "gestopt", "gerookt", "gebruikt", "gestaakt"],
        "tag": "leeftijd",
        "capturing_group": 1
      }
    },
    "bsn": {
      "annotator_type": "custom",
      "group": "identifiers",
      "args": {
        "module": "deduce.annotator",
        "class": "BsnAnnotator",
        "bsn_regexp": "(?<!\\d)(\\d{9})(?!\\d)",
        "capture_group": 1,
        "priority": 100,
        "tag": "bsn"
      }
    },
    "identifier": {
      "annotator_type": "regexp",
      "group": "identifiers",
      "args": {
        "regexp_pattern": "\\d{7,}",
        "tag": "id"
      }
    },
    "phone": {
      "annotator_type": "custom",
      "group": "phone_numbers",
      "args": {
        "module": "deduce.annotator",
        "class": "PhoneNumberAnnotator",
        "phone_regexp": "(?<!\\d)(\\(?(0031|\\+31|0)(1[035]|2[0347]|3[03568]|4[03456]|5[0358]|6|7|88|800|91|90[069]|[1-5]\\d{2})\\)?) ?-? ?((\\d{2,4}[ -]?)+\\d{2,4})",
        "min_digits": 9,
        "max_digits": 11,
        "tag": "telefoonnummer"
      }
    },
    "email": {
      "annotator_type": "regexp",
      "group": "email_addresses",
      "args": {
        "regexp_pattern": "(([-a-zA-Z0-9:%._\\+~#=]{1,256})@([-a-zA-Z0-9:%._\\+~#=]{1,256})(\\.)(com|net|org|co|us|uk|nl|be|fr|sp|gov|nu))",
        "tag": "email"
      }
    },
    "url": {
      "annotator_type": "regexp",
      "group": "urls",
      "args": {
        "regexp_pattern": "((https?:\\/\\/(?:www\\.)?)?([-a-zA-Z0-9:%._\\+~#=]{1,256})(\\.)(com|net|org|co|us|uk|nl|be|fr|sp|gov|nu)(\\b)([():%_\\+.~,]*[-a-zA-Z-0-9#?&/=]+)*)",
        "tag": "url"
      }
    }
  }
}