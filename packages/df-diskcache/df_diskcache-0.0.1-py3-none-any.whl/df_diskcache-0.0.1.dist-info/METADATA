Metadata-Version: 2.1
Name: df-diskcache
Version: 0.0.1
Summary: df-diskcache is a Python library for caching pandas.DataFrame objects to local disk.
Home-page: https://github.com/thombashi/df-diskcache
Author: Tsuyoshi Hombashi
Author-email: tsuyoshi.hombashi@gmail.com
License: MIT License
Project-URL: Changlog, https://github.com/thombashi/df-diskcache/releases
Project-URL: Source, https://github.com/thombashi/df-diskcache
Project-URL: Tracker, https://github.com/thombashi/df-diskcache/issues
Keywords: cache,disk,dataframe,library,pandas
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Typing :: Typed
Requires-Python: >=3.7
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: pandas <3,>=1
Requires-Dist: SimpleSQLite <3,>=1.5
Requires-Dist: typing-extensions <5,>=3 ; python_version < "3.8"
Provides-Extra: logging
Requires-Dist: loguru <1,>=0.4.1 ; extra == 'logging'
Provides-Extra: test
Requires-Dist: pytest >=6.0.1 ; extra == 'test'
Requires-Dist: pytest-md-report >=0.5 ; extra == 'test'

.. contents:: **df-diskcache**
   :backlinks: top
   :depth: 2


Summary
============================================

``df-diskcache`` is a Python library for caching ``pandas.DataFrame`` objects to local disk.

.. image:: https://github.com/thombashi/df-diskcache/actions/workflows/ci.yml/badge.svg
    :target: https://github.com/thombashi/df-diskcache/actions/workflows/ci.yml
    :alt: CI status of Linux/macOS/Windows

.. image:: https://coveralls.io/repos/github/thombashi/df-diskcache/badge.svg?branch=master
    :target: https://coveralls.io/github/thombashi/df-diskcache?branch=master
    :alt: Test coverage: coveralls

.. image:: https://github.com/thombashi/df-diskcache/actions/workflows/github-code-scanning/codeql/badge.svg
    :target: https://github.com/thombashi/df-diskcache/actions/workflows/github-code-scanning/codeql
    :alt: CodeQL


Installation
============================================
::

    pip install df-diskcache


Features
============================================

Supports the following methods:

- ``get``: Get a cache entry (``pandas.DataFrame``) for the key. Returns ``None`` if the key is not found.
- ``set``: Create a cache entry with an optional time-to-live (TTL) for the key-value pair.
- ``update``
- ``touch``: Update the last accessed time of a cache entry to extend the TTL.
- ``delete``
- ``prune``: Delete expired cache entries.
- Dictionary-like operations:
    - ``__getitem__``
    - ``__setitem__``
    - ``__contains__``
    - ``__delitem__``


Usage
============================================

:Sample Code:
    .. code-block:: python

        import pandas as pd
        from dfdiskcache import DataFrameDiskCache

        cache = DataFrameDiskCache()
        url = "https://raw.githubusercontent.com/pandas-dev/pandas/v2.1.3/pandas/tests/io/data/csv/iris.csv"

        df = cache.get(url)
        if df is None:
            print("cache miss")
            df = pd.read_csv(url)
            cache.set(url, df)
        else:
            print("cache hit")

        print(df)

You can also use operations like a dictionary:

:Sample Code:
    .. code-block:: python

        import pandas as pd
        from dfdiskcache import DataFrameDiskCache

        cache = DataFrameDiskCache()
        url = "https://raw.githubusercontent.com/pandas-dev/pandas/v2.1.3/pandas/tests/io/data/csv/iris.csv"

        df = cache[url]
        if df is None:
            print("cache miss")
            df = pd.read_csv(url)
            cache[url] = df
        else:
            print("cache hit")

        print(df)


Dependencies
============================================
- Python 3.7+
- `Python package dependencies (automatically installed) <https://github.com/thombashi/df-diskcache/network/dependencies>`__
