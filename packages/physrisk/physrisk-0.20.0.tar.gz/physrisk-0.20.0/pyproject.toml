[project]
name = "physrisk"
version = "0.20.0"
description = "Physical climate risk calculation engine."
authors = [
    { name = "Joe Moorhouse", email = "72577720+MichaelTiemannOSC@users.noreply.github.com" },
    { name = "Joseph Moorhouse", email = "72577720+MichaelTiemannOSC@users.noreply.github.com" },
]
requires-python = ">=3.9,<3.11"
readme = "README.md"
keywords = [
    "Climate",
    "Physical Risk",
]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.9",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development",
]
dependencies = [
    "affine==2.3.0",
    "dependency-injector==4.41.0",
    "numba==0.56.4",
    "numpy==1.22.0",
    "pillow>=10.0.1",
    "pydantic==2.4.2",
    "python-dotenv==0.19.2",
    "requests>=2.31.0",
    "scipy>=1.10.0",
    "s3fs==2022.1.0",
    "zarr==2.10.3",
]

[project.license]
text = "Apache-2.0"

[project.urls]
Homepage = "https://github.com/is-climate/physrisk"
Repository = "https://github.com/os-climate/physrisk"
Downloads = "https://github.com/os-climate/physrisk/releases"
"Bug Tracker" = "https://github.com/os-climate/physrisk/issues"
Documentation = "https://github.com/os-climate/physrisk/tree/main/docs"
"Source Code" = "https://github.com/os-climate/physrisk"

[options.packages.find]
where = "src"
include = "physrisk*"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm.scripts]
pre_release = "scripts/dev-versioning.sh"
release = "scripts/release-versioning.sh"
test = "pytest"
tox = "tox"
lint = "pre-commit run --all-files"

[tool.pdm.scripts.docs]
shell = "cd docs && mkdocs serve"
help = "Start the dev server for doc preview"

[tool.pdm.scripts.complete]
call = "tasks.complete:main"
help = "Create autocomplete files for bash and fish"

[tool.pdm.dev-dependencies]
test = [
    "pdm[pytest]",
    "pytest-cov",
]
tox = [
    "tox",
    "tox-pdm>=0.5",
]
docs = [
    "sphinx>=7.2.6",
    "sphinx-copybutton>=0.5.2",
]
dev = [
    "tox>=4.11.3",
    "tox-pdm>=0.7.0",
]
lint = [
    "pre-commit",
    "pyproject-flake8",
]

[tool.black]
line-length = 120
exclude = "/(\n    \\.git\n  | \\.tox\n  | \\venv\n  | \\.venv\n  | \\*.env\n  | \\build\n  | \\dist\n)/\n"

[tool.pytest.ini_options]
testpaths = "src/test"
addopts = "-v"

[tool.mypy]
warn_unreachable = true
ignore_missing_imports = true
overrides = [
    { module = "click", ignore_missing_imports = true },
]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120

[tool.coverage.run]
source = "src"
omit = "test/*"
relative_files = true

[tool.flake8]
max-line-length = "120"
extend-ignore = [
    "E2",
    "W5",
    "F401",
    "E501",
]
select = [
    "E",
    "W",
    "F",
    "N",
]
