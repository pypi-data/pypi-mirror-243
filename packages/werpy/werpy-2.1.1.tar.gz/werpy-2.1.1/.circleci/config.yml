# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@2.1.1
  #https://circleci.com/developer/orbs/orb/codecov/codecov
  codecov: codecov/codecov@3.3.0

jobs:
  werpy-unit-tests:
    docker:
    # A list of available CircleCI Docker convenience images are available here: https://circleci.com/developer/images/image/cimg/python
    # The executor is the environment in which the steps below will be executed - below will use a python 3.11.5 container
      - image: cimg/python:3.11.5
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          # If `pip-dependency-file` is set to an empty string, no dependency file is used in the `pip install` command. 
          pip-dependency-file: ""
          # Add numpy and pandas as dependencies
          args: "numpy pandas"
      - run:  
          name: Run unit tests
          command: python -m unittest discover tests

# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  unit-tests:
    jobs:
      - werpy-unit-tests
