# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _OxySDK
else:
    import _OxySDK

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


OXY_MODE_AUDIBLE = _OxySDK.OXY_MODE_AUDIBLE
OXY_MODE_NONAUDIBLE = _OxySDK.OXY_MODE_NONAUDIBLE
OXY_MODE_COMPRESSION = _OxySDK.OXY_MODE_COMPRESSION
OXY_MODE_ALL = _OxySDK.OXY_MODE_ALL
OXY_MODE_CUSTOM = _OxySDK.OXY_MODE_CUSTOM

def OXY_Create():
    return _OxySDK.OXY_Create()

def OXY_Destroy(oxyingObject):
    return _OxySDK.OXY_Destroy(oxyingObject)

def OXY_GetVersion():
    return _OxySDK.OXY_GetVersion()

def OXY_GetVersionInfo(versioninfo):
    return _OxySDK.OXY_GetVersionInfo(versioninfo)

def OXY_Configure(mode, samplingRate, bufferSize, oxyingObject):
    return _OxySDK.OXY_Configure(mode, samplingRate, bufferSize, oxyingObject)

def OXY_SetAudioSignature(samplesSize, samplesBuffer, oxyingObject):
    return _OxySDK.OXY_SetAudioSignature(samplesSize, samplesBuffer, oxyingObject)

def OXY_EncodeDataToAudioBuffer(stringToEncode, size, type, melodyString, melodySize, oxyingObject):
    return _OxySDK.OXY_EncodeDataToAudioBuffer(stringToEncode, size, type, melodyString, melodySize, oxyingObject)

def OXY_GetEncodedAudioBuffer(audioBuffer, oxyingObject):
    return _OxySDK.OXY_GetEncodedAudioBuffer(audioBuffer, oxyingObject)

def OXY_ResetEncodedAudioBuffer(oxyingObject):
    return _OxySDK.OXY_ResetEncodedAudioBuffer(oxyingObject)

def OXY_DecodeAudioBuffer(audioBuffer, size, oxyingObject):
    return _OxySDK.OXY_DecodeAudioBuffer(audioBuffer, size, oxyingObject)

def OXY_GetDecodedData(stringDecoded, oxyingObject):
    return _OxySDK.OXY_GetDecodedData(stringDecoded, oxyingObject)

def OXY_GetConfidence(oxyingObject):
    return _OxySDK.OXY_GetConfidence(oxyingObject)

def OXY_GetConfidenceError(oxyingObject):
    return _OxySDK.OXY_GetConfidenceError(oxyingObject)

def OXY_GetConfidenceNoise(oxyingObject):
    return _OxySDK.OXY_GetConfidenceNoise(oxyingObject)

def OXY_GetReceivedOxysVolume(oxyingObject):
    return _OxySDK.OXY_GetReceivedOxysVolume(oxyingObject)

def OXY_GetDecodedMode(oxyingObject):
    return _OxySDK.OXY_GetDecodedMode(oxyingObject)

def OXY_SetCustomBaseFreq(baseFreq, oxysSeparation, oxyingObject):
    return _OxySDK.OXY_SetCustomBaseFreq(baseFreq, oxysSeparation, oxyingObject)

def OXY_GetDecodingBeginFreq(oxyingObject):
    return _OxySDK.OXY_GetDecodingBeginFreq(oxyingObject)

def OXY_GetDecodingEndFreq(oxyingObject):
    return _OxySDK.OXY_GetDecodingEndFreq(oxyingObject)

def OXY_SetSynthMode(synthMode, oxyingObject):
    return _OxySDK.OXY_SetSynthMode(synthMode, oxyingObject)

def OXY_SetSynthVolume(synthVolume, oxyingObject):
    return _OxySDK.OXY_SetSynthVolume(synthVolume, oxyingObject)

def OXY_GetSpectrum(spectrumBuffer, oxyingObject):
    return _OxySDK.OXY_GetSpectrum(spectrumBuffer, oxyingObject)

def OXY_PyDecodeAudioBuffer(obj, size, oxyingObject):
    return _OxySDK.OXY_PyDecodeAudioBuffer(obj, size, oxyingObject)

def OXY_PyGetDecodedData(oxyingObject):
    return _OxySDK.OXY_PyGetDecodedData(oxyingObject)

def OXY_PyGetEncodedAudioBuffer(obj, oxyingObject):
    return _OxySDK.OXY_PyGetEncodedAudioBuffer(obj, oxyingObject)


