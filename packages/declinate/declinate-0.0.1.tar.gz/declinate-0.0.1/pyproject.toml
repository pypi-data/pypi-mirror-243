[build-system]
requires = ["setuptools>=68", "setuptools-scm[toml]"]
build-backend = "setuptools.build_meta"


[project]
name = "declinate"
authors = [
    {name = "Ternaris", email = "team@ternaris.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
description = "CLI generator."
dependencies = ["isort"]
dynamic = ["version"]
keywords = [
    "cli",
]
license = {text = "Apache 2.0"}
readme = "README.rst"
requires-python = ">=3.10"

[project.optional-dependencies]
dev = [
    "mypy",
    "pytest",
    "pytest-cov",
    "ruff",
    "sphinx",
    "sphinx-autodoc-typehints",
    "sphinx-rtd-theme",
    "yapf",
]

[project.scripts]
declinate = "declinate.cli:main"

[project.urls]
Homepage = "https://gitlab.com/ternaris/declinate"
Documentation = "https://ternaris.gitlab.io/declinate"
Source = "https://gitlab.com/ternaris/declinate"
Issues = "https://gitlab.com/ternaris/declinate/issues"
Changelog = "https://gitlab.com/ternaris/declinate/-/blob/master/CHANGES.rst"


[tool.coverage]
report.exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "if __name__ == '__main__':",
]
report.show_missing = true
report.skip_covered = true
run.branch = true
run.source = ["src"]


[tool.isort]
combine_as_imports = true
ensure_newline_before_comments = true
include_trailing_comma = true
line_length = 100
multi_line_output = 3
split_on_trailing_comma = true


[tool.mypy]
disallow_any_explicit = true
explicit_package_bases = true
fast_module_lookup = true
mypy_path = "src"
namespace_packages = true
strict = true

[[tool.mypy.overrides]]
module = []
ignore_missing_imports = true


[tool.pydocstyle]
convention = "google"
add_select = ["D204", "D400", "D401", "D404", "D413"]


[tool.pytest.ini_options]
addopts = ["--cov", "--verbose"]


[tool.ruff]
select = [
  "ALL",
]
ignore = [
  "ANN101",
  # "ANN102",
  # "C901",
  # "ERA001",
  # "FBT001",
  # "FBT002",
  # "FBT003",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
  "PLR2004",
  # allow asserts
  "S101",
]
line-length = 100

[tool.ruff.isort]
combine-as-imports = true
force-wrap-aliases = true
known-first-party = ["declinate"]

[tool.ruff.flake8-quotes]
avoid-escape = false
inline-quotes = "single"

[tool.ruff.pydocstyle]
convention = "google"


[tool.setuptools_scm]


[tool.yapf]
based_on_style = "google"
column_limit = 100
allow_split_before_dict_value = false
dedent_closing_brackets = true
indent_dictionary_value = false
