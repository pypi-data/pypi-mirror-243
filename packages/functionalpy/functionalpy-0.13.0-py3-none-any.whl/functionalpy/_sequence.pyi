"""
This type stub file was generated by pyright.
# TODO: https://github.com/MartinBernstorff/FunctionalPy/issues/38 ci: ensure .pyi files are aligned with implementation
"""

from collections.abc import (
    Callable,
    Iterable,
    Iterator,
    Mapping,
    Sequence,
)
from dataclasses import dataclass
from typing import Generic, TypeVar, overload

_T = TypeVar("_T")
_S = TypeVar("_S")

@dataclass(frozen=True)
class Group(Generic[_T]):
    key: str
    value: Seq[_T]
    ...

class Seq(Generic[_T]):
    def __init__(self, iterable: Iterable[_T]) -> None: ...
    def count(self) -> int: ...
    def to_list(self) -> list[_T]: ...
    def to_tuple(self) -> tuple[_T, ...]: ...
    def to_iter(self) -> Iterator[_T]: ...
    def to_set(self) -> set[_T]: ...
    def map(self, func: Callable[[_T], _S]) -> Seq[_S]:  # noqa: A003
        ...
    def filter(self, func: Callable[[_T], bool]) -> Seq[_T]:  # noqa: A003
        ...
    def reduce(self, func: Callable[[_T, _T], _T]) -> _T: ...
    def groupby(
        self, func: Callable[[_T], str]
    ) -> Mapping[str, Sequence[_T]]: ...
    @overload
    def flatten(self: Seq[list[_S]]) -> Seq[_S]: ...
    @overload
    def flatten(self: Seq[tuple[_S, ...]]) -> Seq[_S]: ...
    @overload
    def flatten(self: Seq[_S]) -> Seq[_S]: ...
