[build-system]
requires = ["maturin>=1.3,<2.0"]
build-backend = "maturin"

[project]
name = "decentriq_dcr_compiler"
requires-python = ">=3.7"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version"]
dependencies = [
  "pydantic==1.*"
]

[tool.poetry]
name = "decentriq_dcr_compiler"
version = "0.1.0"
description = "inner project for dev tooling"
authors = ["Enrico Ghirardi <dev@choco.me>"]

[tool.maturin]
features = ["pyo3/extension-module"]
module-name = "decentriq_dcr_compiler._ddc_py"
manifest-path = "dcr-compiler/decentriq_dcr_compiler/Cargo.toml"

[tool.poetry.dependencies]
python = "^3.7"
pydantic = "^1.9.1"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
mypy = "^0.971"
black = "^22.6.0"
poethepoet = "^0.16.0"
datamodel-code-generator = "^0.13.0"
isort = "^5.10.1"

[tool.poe.tasks]
codegen-schema = "datamodel-codegen --disable-timestamp --reuse-model --use-generic-container-types --input schemas/ --input-file-type jsonschema --output decentriq_dcr_compiler/schemas/"
format = [{cmd = "black ."}, {cmd = "isort ."}]
lint = [
  {cmd = "black --check ."},
  {cmd = "isort --check-only ."},
  {ref = "lint-types"},
]
lint-types = "mypy --namespace-packages ."
test = "pytest"

[tool.black]
extend-exclude = "^/decentriq_dcr_compiler/schemas/*"

[tool.isort]
profile = "black"
skip_gitignore = true

[tool.mypy]
plugins = [
  "pydantic.mypy"
]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
ignore_missing_imports = true
disallow_untyped_defs = true
show_error_codes = true
exclude = ["decentriq_dcr_compiler/schemas/"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true
