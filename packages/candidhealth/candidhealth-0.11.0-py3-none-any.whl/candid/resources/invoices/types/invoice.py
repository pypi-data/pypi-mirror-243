# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime
from ...commons.types.date import Date
from ...commons.types.invoice_id import InvoiceId
from ...commons.types.organization_id import OrganizationId
from ...commons.types.patient_external_id import PatientExternalId
from .invoice_item import InvoiceItem
from .invoice_status import InvoiceStatus


class Invoice(pydantic.BaseModel):
    id: InvoiceId
    created_at: dt.datetime
    updated_at: dt.datetime
    organzation_id: OrganizationId
    source_id: str
    source_customer_id: str
    patient_external_id: PatientExternalId
    note: typing.Optional[str]
    due_date: Date
    status: InvoiceStatus
    url: typing.Optional[str]
    customer_invoice_url: typing.Optional[str]
    items: typing.List[InvoiceItem]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
