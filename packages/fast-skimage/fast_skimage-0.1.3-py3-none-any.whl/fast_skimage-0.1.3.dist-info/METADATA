Metadata-Version: 2.1
Name: fast-skimage
Version: 0.1.3
Summary: Demo library
Home-page: https://medium-multiply.readthedocs.io/
Author: Joffrey Bienvenu
Author-email: example@email.com
License: MIT
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: matplotlib
Requires-Dist: scikit-image
Requires-Dist: PyWavelets

# fast_skimage Library - Image Class



Welcome to the Image Processing Library. This powerful library offers a wide range of tools for advanced image manipulation and analysis, wrapped up in the accessible `Image` class.



## Features

- **Advanced Manipulation**: Apply complex operations like adding watermarks, noise detection, auto-enhancement, and saturation increase with simple method calls.

- **Filtering and Thresholding**: Includes mean, median filtering, Otsu's thresholding, and custom thresholding methods for image segmentation and noise reduction.

- **Fourier Transforms**: Utilize Fourier-based methods for reducing image dithering and other artifacts.

- **Histogram Operations**: Equalize and stretch image histograms to improve contrast and visibility.

- **Texture Analysis**: Perform texture segmentation using a variety of descriptors.



## Getting Started

1. **Installation**: Clone the repository or download the `Image` class module to your project.

2. **Dependencies**: Ensure all dependencies such as `numpy`, `matplotlib`, `scikit-image`, and `PyWavelets` are installed.

3. **Usage**: Import the `Image` class from the module and instantiate it with the path to your image or a NumPy array.



## Example

```python

from fast_skimage import Image

from skimage.data import immunohistochemistry



# Load an image with path...

img = Image("Pictures/camera.jpg")

# ... or numpy array

img2 = Image(immunohistochemistry())



# Apply auto-enhancement

img.auto_enhance()

img2.auto_enhance()



# Display the result

img.show(subplots=(1, 2, 1), size=12)

img2.show(subplots=(1, 2, 2), title='Immunochemistry Image')



# Plot histogram

img.show(size=(12, 6), type_of_plot='hist', axis=True)

```



## Documentation

Refer to the in-line comments and method docstrings for detailed usage of each feature.



## Contribution

Contributions are welcome! Feel free to submit pull requests, suggest features, or report bugs.



## License

This library is distributed under the MIT license. See `LICENSE` for more information.



## Contact

- **Author**: Alexandre Le Mercier

- **Date**: November 21, 2023

- **Email**: [alexandre.le.mercier@ulb.be](mailto:alexandre.le.mercier@ulb.be)



Happy Image Processing!
