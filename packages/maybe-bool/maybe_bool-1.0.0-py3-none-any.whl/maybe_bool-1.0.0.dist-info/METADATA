Metadata-Version: 2.1
Name: maybe-bool
Version: 1.0.0
Summary: Have a boolean value that could evaluate to true or false
Author-email: Carl Furtado <carlzfurtado@gmail.com>
License: The MIT License (MIT)
        
        Copyright (c) 2023 Carl Furtado
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
        
Project-URL: Homepage, https://github.com/User0332/maybe-boolean
Keywords: boolean,maybe,joke
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE

# Maybe-Boolean

The `Maybe` type from the `maybe_boolean` package creates a new boolean-like value that could could be true OR false when evaluated. Once it is evaluated to a boolean value, it keeps its identity. Install the library with `pip install maybe-bool`.

Short Example
```py
from maybe_boolean import Maybe

val = Maybe()

if val:
	print(val) # prints `True`
else:
	print(val) # prints `False`

```
