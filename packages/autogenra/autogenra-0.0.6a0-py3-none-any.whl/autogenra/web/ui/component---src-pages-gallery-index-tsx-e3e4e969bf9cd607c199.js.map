{"version":3,"file":"component---src-pages-gallery-index-tsx-e3e4e969bf9cd607c199.js","mappings":"8OAoFA,MA7EoBA,KAClB,MAAMC,GAAYC,EAAAA,EAAAA,OACZ,KAAEC,GAASC,EAAAA,WAAiBC,EAAAA,IAC3BC,EAASC,GAAcH,EAAAA,UAAe,IACtCI,EAASC,GAAcL,EAAAA,SAA6B,MACrDM,EAAkB,GAAET,qBAA6BE,aAAI,EAAJA,EAAMQ,SACtDC,EAAOC,GAAYT,EAAAA,SAA+B,CACvDU,QAAQ,EACRC,QAAS,aAGXX,EAAAA,WAAgB,KACdY,GAAc,GACb,IAEH,MAAMA,EAAeA,KACnBH,EAAS,MACTN,GAAW,IAyBXU,EAAAA,EAAAA,IAAUP,EAvBM,CACdQ,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAIDC,IACjBC,QAAQC,IAAIF,GACRA,GAAQA,EAAKN,QACfC,EAAAA,GAAQQ,QAAQH,EAAKL,SACrBM,QAAQC,IAAI,UAAWF,GACvBX,EAAWW,EAAKA,OAEhBL,EAAAA,GAAQH,MAAMQ,EAAKL,SAErBR,GAAW,EAAM,IAEFiB,IACfX,EAASW,GACTT,EAAAA,GAAQH,MAAMY,EAAIT,SAClBR,GAAW,EAAM,GAEmC,EAGlDkB,EAAcjB,aAAO,EAAPA,EAASkB,KAAI,CAACC,EAAWC,IAEzCxB,EAAAA,cAAA,OAAKyB,IAAK,aAAeD,GACvBxB,EAAAA,cAAC0B,EAAAA,GAAI,CAACC,MAAOJ,EAAKK,IAChB5B,EAAAA,cAAA,YAAM6B,EAAAA,EAAAA,IAAQN,EAAKO,gBAM3B,OACE9B,EAAAA,cAAA,OAAK+B,UAAU,KACb/B,EAAAA,cAAA,OAAK+B,UAAU,iBAAgB,WAC/B/B,EAAAA,cAAA,WAAK,mEAELA,EAAAA,cAAA,OAAK+B,UAAU,4EACZV,GAGFnB,GACCF,EAAAA,cAAA,OAAK+B,UAAU,iCACb/B,EAAAA,cAAA,WACG,IACDA,EAAAA,cAACgC,EAAAA,GAAY,OACT,mBAIN,ECrDV,MArBoBC,IAAmB,IAAlB,KAAEjB,GAAWiB,EAChC,OACEjC,EAAAA,cAACkC,EAAAA,EAAM,CAACC,KAAMnB,EAAKoB,KAAKC,aAAcV,MAAM,UAAUW,KAAM,YAC1DtC,EAAAA,cAAA,QAAMuC,MAAO,CAAEC,OAAQ,QAAUT,UAAU,YACzC/B,EAAAA,cAACJ,EAAW,OAEP,C","sources":["webpack://AutoGen_Assistant/./src/components/views/gallery/gallery.tsx","webpack://AutoGen_Assistant/./src/pages/gallery/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { appContext } from \"../../../hooks/provider\";\nimport { fetchJSON, getServerUrl, timeAgo } from \"../../utils\";\nimport { IStatus } from \"../../types\";\nimport { message } from \"antd\";\nimport { BounceLoader, Card } from \"../../atoms\";\n\nconst GalleryView = () => {\n  const serverUrl = getServerUrl();\n  const { user } = React.useContext(appContext);\n  const [loading, setLoading] = React.useState(false);\n  const [gallery, setGallery] = React.useState<null | any[]>(null);\n  const listGalleryUrl = `${serverUrl}/gallery?user_id=${user?.email}`;\n  const [error, setError] = React.useState<IStatus | null>({\n    status: true,\n    message: \"All good\",\n  });\n\n  React.useEffect(() => {\n    fetchGallery();\n  }, []);\n\n  const fetchGallery = () => {\n    setError(null);\n    setLoading(true);\n    // const fetch;\n    const payLoad = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const onSuccess = (data: any) => {\n      console.log(data);\n      if (data && data.status) {\n        message.success(data.message);\n        console.log(\"gallery\", data);\n        setGallery(data.data);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(listGalleryUrl, payLoad, onSuccess, onError);\n  };\n\n  const galleryRows = gallery?.map((item: any, index: number) => {\n    return (\n      <div key={\"galleryrow\" + index}>\n        <Card title={item.id}>\n          <div>{timeAgo(item.timestamp)}</div>\n        </Card>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\" \">\n      <div className=\"mb-4 text-2xl\">Gallery</div>\n      <div>View a collection of AutoGen agent specifications and sessions </div>\n\n      <div className=\"mt-4 grid gap-3 grid-cols-2 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6\">\n        {galleryRows}\n      </div>\n\n      {loading && (\n        <div className=\"w-full text-center boder mt-4\">\n          <div>\n            {\" \"}\n            <BounceLoader />\n          </div>\n          loading gallery\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GalleryView;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../../components/layout\";\nimport GalleryView from \"../../components/views/gallery/gallery\";\n\n// markup\nconst GalleryPage = ({ data }: any) => {\n  return (\n    <Layout meta={data.site.siteMetadata} title=\"Gallery\" link={\"/gallery\"}>\n      <main style={{ height: \"100%\" }} className=\" h-full \">\n        <GalleryView />\n      </main>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query HomePageQuery {\n    site {\n      siteMetadata {\n        description\n        title\n      }\n    }\n  }\n`;\n\nexport default GalleryPage;\n"],"names":["GalleryView","serverUrl","getServerUrl","user","React","appContext","loading","setLoading","gallery","setGallery","listGalleryUrl","email","error","setError","status","message","fetchGallery","fetchJSON","method","headers","data","console","log","success","err","galleryRows","map","item","index","key","Card","title","id","timeAgo","timestamp","className","BounceLoader","_ref","Layout","meta","site","siteMetadata","link","style","height"],"sourceRoot":""}