Metadata-Version: 2.1
Name: ER-Evaluation
Version: 2.3.0
Summary: An End-to-End Evaluation Framework for Entity Resolution Systems.
Home-page: https://github.com/OlivierBinette/er_evaluation
Author: Olivier Binette
Author-email: olivier.binette@gmail.com
License: GNU Affero General Public License v3
Keywords: er_evaluation
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.6
License-File: LICENSE
License-File: AUTHORS.rst
Requires-Dist: pandas
Requires-Dist: numpy
Requires-Dist: scipy
Requires-Dist: plotly
Requires-Dist: igraph
Requires-Dist: scikit-learn
Requires-Dist: pyarrow
Requires-Dist: urllib3
Requires-Dist: requests
Provides-Extra: test
Requires-Dist: pandas ; extra == 'test'
Requires-Dist: numpy ; extra == 'test'
Requires-Dist: scipy ; extra == 'test'
Requires-Dist: plotly ; extra == 'test'
Requires-Dist: igraph ; extra == 'test'
Requires-Dist: scikit-learn ; extra == 'test'
Requires-Dist: pyarrow ; extra == 'test'
Requires-Dist: urllib3 ; extra == 'test'
Requires-Dist: requests ; extra == 'test'
Requires-Dist: pytest >=3 ; extra == 'test'
Requires-Dist: testbook ; extra == 'test'
Requires-Dist: jupyter ; extra == 'test'
Requires-Dist: pyhamcrest ; extra == 'test'
Requires-Dist: wheel ; extra == 'test'


.. image:: https://github.com/Valires/er-evaluation/actions/workflows/python-package.yaml/badge.svg
        :target: https://github.com/Valires/er-evaluation/actions/workflows/python-package.yaml
        :alt: Github Action workflow status and link.

.. image:: https://badge.fury.io/py/er-evaluation.svg
        :target: https://badge.fury.io/py/er-evaluation
        :alt: PyPI release badge and link.

.. image:: https://readthedocs.org/projects/er-evaluation/badge/?version=latest
        :target: https://er-evaluation.readthedocs.io/en/latest/?version=latest
        :alt: Documentation status badge and link.

.. image:: https://joss.theoj.org/papers/10.21105/joss.05619/status.svg
       :target: https://doi.org/10.21105/joss.05619
       :alt: Journal of Open Source Software publication badge and link.

üîç ER-Evaluation: An End-to-End Evaluation Framework for Entity Resolution Systems
===================================================================================

`ER-Evaluation <https://er-evaluation.readthedocs.io/en/latest>`_ is a Python package for the evaluation of entity resolution (ER) systems.

It provides an **entity-centric** approach to evaluation. Given a sample of resolved entities, it provides: 

* **summary statistics**, such as average cluster size, matching rate, homonymy rate, and name variation rate.
* **comparison statistics** between entity resolutions, such as proportion of links from one which is also in the other, and vice-versa.
* **performance estimates** with uncertainty quantification, such as precision, recall, and F1 score estimates, as well as B-cubed and cluster metric estimates.
* **error analysis**, such as cluster-level error metrics and analysis tools to find root cause of errors.
* convenience **visualization tools**.

For more information on how to resolve a sample of entities for evaluation and model training, please refer to our `data labeling guide <https://er-evaluation.readthedocs.io/en/latest/06-data-labeling.html>`_.

Installation
---------------

Install the released version from PyPI using:

.. code:: bash

    pip install er-evaluation

Or install the development version using:
.. code:: bash

    pip install git+https://github.com/Valires/er-evaluation.git


Documentation
----------------

Please refer to the documentation website `er-evaluation.readthedocs.io <https://er-evaluation.readthedocs.io/en/latest>`_.

Usage Examples
-----------------

Please refer to the `User Guide <https://er-evaluation.readthedocs.io/en/latest/userguide.html>`_ or our `Visualization Examples <https://er-evaluation.readthedocs.io/en/latest/visualizations.html>`_ for a complete usage guide.

In summary, here's how you might use the package.

1. Import your predicted disambiguations and reference benchmark dataset. The benchmark dataset should contain a sample of disambiguated entities.

.. code::

        import er_evaluation as ee

        predictions, reference = ee.load_pv_disambiguations()

2. Plot `summary statistics <https://er-evaluation.readthedocs.io/en/latest/02-summary_statistics.html>`_ and compare disambiguations.

.. code::

        ee.plot_summaries(predictions)

.. image:: media/plot_summaries.png
   :width: 400

.. code::

        ee.plot_comparison(predictions)

.. image:: media/plot_comparison.png
   :width: 400

3. Define sampling weights and `estimate performance metrics <https://er-evaluation.readthedocs.io/en/latest/03-estimating_performance.html>`_.

.. code::

        ee.plot_estimates(predictions, {"sample":reference, "weights":"cluster_size"})

.. image:: media/plot_estimates.png
   :width: 400

4. Perform `error analysis <https://er-evaluation.readthedocs.io/en/latest/04-error_analysis.html>`_ using cluster-level explanatory features and cluster error metrics.

.. code::

        ee.make_dt_regressor_plot(
                y,
                weights,
                features_df,
                numerical_features,
                categorical_features,
                max_depth=3,
                type="sunburst"
        )

.. image:: media/plot_decisiontree.png
   :width: 400

Development Philosophy
-------------------------

**ER-Evaluation** is designed to be a unified source of evaluation tools for entity resolution systems, adhering to the Unix philosophy of simplicity, modularity, and composability. The package contains Python functions that take standard data structures such as pandas Series and DataFrames as input, making it easy to integrate into existing workflows. By importing the necessary functions and calling them on your data, you can easily use ER-Evaluation to evaluate your entity resolution system without worrying about custom data structures or complex architectures.

Citation
-----------

Please acknowledge the publications below if you use ER-Evaluation:

- Binette, Olivier. (2022). ER-Evaluation: An End-to-End Evaluation Framework for Entity Resolution Systems. Available online at `github.com/Valires/ER-Evaluation <https://github.com/Valires/ER-Evaluation>`_
- Binette, Olivier, Sokhna A York, Emma Hickerson, Youngsoo Baek, Sarvo Madhavan, Christina Jones. (2022). Estimating the Performance of Entity Resolution Algorithms: Lessons Learned Through PatentsView.org. arXiv e-prints: `arxiv:2210.01230 <https://arxiv.org/abs/2210.01230>`_
- Upcoming: "An End-to-End Framework for the Evaluation of Entity Resolution Systems With Application to Inventor Name Disambiguation"

Public License
--------------

* `GNU Affero General Public License v3 <https://www.gnu.org/licenses/agpl-3.0.en.html>`_


=========
Changelog
=========

2.3.0 (November 29, 2023)
-------------------------

* Fix handling of NaN values in `compress_memberships()`

2.2.1 (November 8, 2023)
------------------------
* Small fixes to paper and documentation.

2.2.0 (October 26, 2023)
------------------------
* Streamline package structure
* Additional tests
* Improved documentation

2.1.0 (June 02, 2023)
----------------------

* Add sunburst visualization for decision tree regressors
* Add decision tree regression pipeline for subgroup discovery
* Add search utilities
* Prepare submission to JOSS

2.0.0 (March 27, 2023)
----------------------

* Improve documentation
* Add handling of NA values
* Bug fixes
* Add datasets module
* Add visualization functions
* Performance improvements
* BREAKING: error_analysis functions have been renamed.
* BREAKING: estimators have been renamed.
* Added estimators support for sensitivity analyses
* Added fairness plots
* Performance improvements
* Added `compress_memberships()` function for performance improvements.

1.2.0 (January 11, 2022)
------------------------

- Refactoring and documentation overhaul.

1.1.0 (January 10, 2022)
------------------------

- Added additional error metrics, performance evaluation metrics, and performance estimators.
- Added record-level error metrics and error analysis tools.

1.0.2 (December 5, 2022)
------------------------

- Update setup.py with find_packages()

1.0.1 (November 30, 2022)
-------------------------

- Add "normalize" option to plot_cluster_sizes_distribution.
- Fix bugs in homonimy_rate and and name_variation_rate.
- Fix bug in estimators.

1.0.0
-----

- Initial release
