Metadata-Version: 2.1
Name: pyNonogram
Version: 0.0.1
Summary: Description under construction
Home-page: https://github.com/Apsurt/pyNonogram
Author: Tymon Becella
Author-email: tymon.becella@gmail.com
License: MIT
Keywords: nonogram nonograms griddlers picross pic-a-pix paintbynumbers puzzle puzzles
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Games/Entertainment
Classifier: Topic :: Utilities
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: PyPy
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: PyYAML>=3.11
Requires-Dist: jsonpickle>=0.9.3
Requires-Dist: numpy>=1.19.5
Requires-Dist: pytest>=6.2.4

# pyNonogram

Framework for puzzle game *Nonogram*. It was made thinking about projects that aim to solve puzzles. I wanted to create comprehensive library that would take some work of nonogram developers' shoulders.

It is my first package thus, reporting issues and pull request are more than appreciated.

## Table of Contents

- [Installation](#installation)
- [Usage](#usage)
    - [File extension](#file-extension-non)
    - [Code example](#code-example)
- [Contributing](#contributing)
- [License](#license)

## Installation

Install with pip:

```
pip install pyNonogram
```

## Usage

### File extension (.non)

Example .non file:

```
author:Apsurt
date:25.11.23
picture:3
difficulty:2
width:5
height:5
rows:1 3 5 1,1 1,1
columns:1 4 3 4 1
solution:
```

Note that there is no space before or after the colon. Separate row or column hints are separated by space character, whereas hints in the same row or column are separated with coma. For row hints in sequence are from left to right, for columns from top to bottom.

### Code example

```
from pyNonogram import Nonogram

my_nonogram = Nonogram()
my_nonogram.load("house.non")

my_nonogram.grid.fill_row(2, 1)

my_nonogram.print()
```

For more elaborate examples check out [GitHub](https://github.com/Apsurt/pyNonogram/tree/main/examples)

## Contributing

TBA

## License

This project is licensed under the [MIT License](LICENSE).
