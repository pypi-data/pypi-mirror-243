{
  "$defs": {
    "ClassicThemeEntryAreaMargins": {
      "properties": {
        "left_and_right": {
          "default": "0.2 cm",
          "description": "The left margin of entry areas.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Left Margin",
          "type": "string"
        },
        "vertical_between": {
          "default": "0.12 cm",
          "description": "The vertical margin between entry areas.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Vertical Margin Between Entry Areas",
          "type": "string"
        }
      },
      "title": "ClassicThemeEntryAreaMargins",
      "type": "object",
      "additionalProperties": false
    },
    "ClassicThemeHeaderMargins": {
      "properties": {
        "vertical_between_name_and_connections": {
          "default": "0.2 cm",
          "description": "The vertical margin between the name of the person and the connections.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Vertical Margin Between the Name and Connections",
          "type": "string"
        },
        "bottom": {
          "default": "0.2 cm",
          "description": "The bottom margin of the header, i.e., the vertical margin between the connections and the first section title.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Bottom Margin",
          "type": "string"
        }
      },
      "title": "ClassicThemeHeaderMargins",
      "type": "object",
      "additionalProperties": false
    },
    "ClassicThemeHighlightsAreaMargins": {
      "properties": {
        "top": {
          "default": "0.10 cm",
          "description": "The top margin of highlights areas.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Top Margin",
          "type": "string"
        },
        "left": {
          "default": "0.4 cm",
          "description": "The left margin of highlights areas.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Left Margin",
          "type": "string"
        },
        "vertical_between_bullet_points": {
          "default": "0.10 cm",
          "description": "The vertical margin between bullet points.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Vertical Margin Between Bullet Points",
          "type": "string"
        }
      },
      "title": "ClassicThemeHighlightsAreaMargins",
      "type": "object",
      "additionalProperties": false
    },
    "ClassicThemeMargins": {
      "properties": {
        "page": {
          "allOf": [
            {
              "$ref": "#/$defs/ClassicThemePageMargins"
            }
          ],
          "default": {
            "bottom": "2 cm",
            "left": "1.24 cm",
            "right": "1.24 cm",
            "top": "2 cm"
          },
          "description": "Page margins for the classic theme.",
          "title": "Page Margins"
        },
        "section_title": {
          "allOf": [
            {
              "$ref": "#/$defs/ClassicThemeSectionTitleMargins"
            }
          ],
          "default": {
            "bottom": "0.2 cm",
            "top": "0.2 cm"
          },
          "description": "Section title margins for the classic theme.",
          "title": "Section Title Margins"
        },
        "entry_area": {
          "allOf": [
            {
              "$ref": "#/$defs/ClassicThemeEntryAreaMargins"
            }
          ],
          "default": {
            "left_and_right": "0.2 cm",
            "vertical_between": "0.12 cm"
          },
          "description": "Entry area margins for the classic theme.",
          "title": "Entry Area Margins"
        },
        "highlights_area": {
          "allOf": [
            {
              "$ref": "#/$defs/ClassicThemeHighlightsAreaMargins"
            }
          ],
          "default": {
            "left": "0.4 cm",
            "top": "0.10 cm",
            "vertical_between_bullet_points": "0.10 cm"
          },
          "description": "Highlights area margins for the classic theme.",
          "title": "Highlights Area Margins"
        },
        "header": {
          "allOf": [
            {
              "$ref": "#/$defs/ClassicThemeHeaderMargins"
            }
          ],
          "default": {
            "bottom": "0.2 cm",
            "vertical_between_name_and_connections": "0.2 cm"
          },
          "description": "Header margins for the classic theme.",
          "title": "Header Margins"
        }
      },
      "title": "ClassicThemeMargins",
      "type": "object",
      "additionalProperties": false
    },
    "ClassicThemeOptions": {
      "properties": {
        "primary_color": {
          "default": "rgb(0,79,144)",
          "description": "The primary color of Classic Theme. It is used for the section titles, heading, and the links.\nThe color can be specified either with their [name](https://www.w3.org/TR/SVG11/types.html#ColorKeywords), hexadecimal value, RGB value, or HSL value.",
          "examples": [
            "Black",
            "7fffd4",
            "rgb(0,79,144)",
            "hsl(270, 60%, 70%)"
          ],
          "format": "color",
          "title": "Primary Color",
          "type": "string"
        },
        "date_and_location_width": {
          "default": "4.1 cm",
          "description": "The width of the date and location column.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Date and Location Column Width",
          "type": "string"
        },
        "text_alignment": {
          "default": "left-aligned",
          "description": "The alignment of the text.",
          "enum": [
            "left-aligned",
            "justified"
          ],
          "title": "Text Alignment",
          "type": "string"
        },
        "show_timespan_in": {
          "default": [],
          "description": "The time span will be shown in the date and location column in these sections. The input should be a list of strings.",
          "items": {
            "type": "string"
          },
          "title": "Show Time Span in These Sections",
          "type": "array"
        },
        "show_last_updated_date": {
          "default": true,
          "description": "If this option is set to true, then the last updated date will be shown in the header.",
          "title": "Show Last Updated Date",
          "type": "boolean"
        },
        "header_font_size": {
          "default": "30 pt",
          "description": "The font size of the header (the name of the person).",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Header Font Size",
          "type": "string"
        },
        "margins": {
          "allOf": [
            {
              "$ref": "#/$defs/ClassicThemeMargins"
            }
          ],
          "default": {
            "entry_area": {
              "left_and_right": "0.2 cm",
              "vertical_between": "0.12 cm"
            },
            "header": {
              "bottom": "0.2 cm",
              "vertical_between_name_and_connections": "0.2 cm"
            },
            "highlights_area": {
              "left": "0.4 cm",
              "top": "0.10 cm",
              "vertical_between_bullet_points": "0.10 cm"
            },
            "page": {
              "bottom": "2 cm",
              "left": "1.24 cm",
              "right": "1.24 cm",
              "top": "2 cm"
            },
            "section_title": {
              "bottom": "0.2 cm",
              "top": "0.2 cm"
            }
          },
          "description": "Page, section title, entry field, and highlights field margins.",
          "title": "Margins"
        }
      },
      "title": "ClassicThemeOptions",
      "type": "object",
      "additionalProperties": false
    },
    "ClassicThemePageMargins": {
      "properties": {
        "top": {
          "default": "2 cm",
          "description": "The top margin of the page with units.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Top Margin",
          "type": "string"
        },
        "bottom": {
          "default": "2 cm",
          "description": "The bottom margin of the page with units.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Bottom Margin",
          "type": "string"
        },
        "left": {
          "default": "1.24 cm",
          "description": "The left margin of the page with units.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Left Margin",
          "type": "string"
        },
        "right": {
          "default": "1.24 cm",
          "description": "The right margin of the page with units.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Right Margin",
          "type": "string"
        }
      },
      "title": "ClassicThemePageMargins",
      "type": "object",
      "additionalProperties": false
    },
    "ClassicThemeSectionTitleMargins": {
      "properties": {
        "top": {
          "default": "0.2 cm",
          "description": "The top margin of section titles.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Top Margin",
          "type": "string"
        },
        "bottom": {
          "default": "0.2 cm",
          "description": "The bottom margin of section titles.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Bottom Margin",
          "type": "string"
        }
      },
      "title": "ClassicThemeSectionTitleMargins",
      "type": "object",
      "additionalProperties": false
    },
    "CurriculumVitae": {
      "properties": {
        "name": {
          "description": "The name of the person.",
          "title": "Name",
          "type": "string"
        },
        "label": {
          "default": null,
          "description": "The label of the person.",
          "title": "Label",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "location": {
          "default": null,
          "description": "The location of the person. This is not rendered currently.",
          "title": "Location",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "email": {
          "default": null,
          "description": "The email of the person. It will be rendered in the heading.",
          "title": "Email",
          "allOf": [
            {
              "format": "email",
              "type": "string"
            }
          ]
        },
        "phone": {
          "default": null,
          "title": "Phone",
          "allOf": [
            {
              "maxLength": 64,
              "minLength": 7,
              "type": "string"
            }
          ]
        },
        "website": {
          "default": null,
          "title": "Website",
          "allOf": [
            {
              "format": "uri",
              "maxLength": 2083,
              "minLength": 1,
              "type": "string"
            }
          ]
        },
        "social_networks": {
          "default": null,
          "description": "The social networks of the person. They will be rendered in the heading.",
          "title": "Social Networks",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/SocialNetwork"
              },
              "type": "array"
            }
          ]
        },
        "summary": {
          "default": null,
          "description": "The summary of the person.",
          "title": "Summary",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "section_order": {
          "default": null,
          "description": "The order of sections in the CV. The section title should be used.",
          "title": "Section Order",
          "allOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "education": {
          "default": null,
          "description": "The education entries of the person.",
          "title": "Education",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/EducationEntry"
              },
              "type": "array"
            }
          ]
        },
        "experience": {
          "default": null,
          "description": "The experience entries of the person.",
          "title": "Experience",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/ExperienceEntry"
              },
              "type": "array"
            }
          ]
        },
        "work_experience": {
          "default": null,
          "description": "The work experience entries of the person.",
          "title": "Work Experience",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/ExperienceEntry"
              },
              "type": "array"
            }
          ]
        },
        "projects": {
          "default": null,
          "description": "The project entries of the person.",
          "title": "Projects",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/NormalEntry"
              },
              "type": "array"
            }
          ]
        },
        "academic_projects": {
          "default": null,
          "description": "The academic project entries of the person.",
          "title": "Academic Projects",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/NormalEntry"
              },
              "type": "array"
            }
          ]
        },
        "university_projects": {
          "default": null,
          "description": "The university project entries of the person.",
          "title": "University Projects",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/NormalEntry"
              },
              "type": "array"
            }
          ]
        },
        "personal_projects": {
          "default": null,
          "description": "The personal project entries of the person.",
          "title": "Personal Projects",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/NormalEntry"
              },
              "type": "array"
            }
          ]
        },
        "publications": {
          "default": null,
          "description": "The publication entries of the person.",
          "title": "Publications",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/PublicationEntry"
              },
              "type": "array"
            }
          ]
        },
        "certificates": {
          "default": null,
          "description": "The certificate entries of the person.",
          "title": "Certificates",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/NormalEntry"
              },
              "type": "array"
            }
          ]
        },
        "extracurricular_activities": {
          "default": null,
          "description": "The extracurricular activity entries of the person.",
          "title": "Extracurricular Activities",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/ExperienceEntry"
              },
              "type": "array"
            }
          ]
        },
        "test_scores": {
          "default": null,
          "description": "The test score entries of the person.",
          "title": "Test Scores",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/OneLineEntry"
              },
              "type": "array"
            }
          ]
        },
        "programming_skills": {
          "default": null,
          "description": "The programming skill entries of the person.",
          "title": "Programming Skills",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/NormalEntry"
              },
              "type": "array"
            }
          ]
        },
        "skills": {
          "default": null,
          "description": "The skill entries of the person.",
          "title": "Skills",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/OneLineEntry"
              },
              "type": "array"
            }
          ]
        },
        "other_skills": {
          "default": null,
          "description": "The skill entries of the person.",
          "title": "Skills",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/OneLineEntry"
              },
              "type": "array"
            }
          ]
        },
        "awards": {
          "default": null,
          "description": "The award entries of the person.",
          "title": "Awards",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/OneLineEntry"
              },
              "type": "array"
            }
          ]
        },
        "interests": {
          "default": null,
          "description": "The interest entries of the person.",
          "title": "Interests",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/OneLineEntry"
              },
              "type": "array"
            }
          ]
        },
        "custom_sections": {
          "default": null,
          "description": "Custom sections with custom section titles can be rendered as well.",
          "title": "Custom Sections",
          "allOf": [
            {
              "items": {
                "discriminator": {
                  "mapping": {
                    "EducationEntry": "#/$defs/SectionWithEducationEntries",
                    "ExperienceEntry": "#/$defs/SectionWithExperienceEntries",
                    "NormalEntry": "#/$defs/SectionWithNormalEntries",
                    "OneLineEntry": "#/$defs/SectionWithOneLineEntries",
                    "PublicationEntry": "#/$defs/SectionWithPublicationEntries"
                  },
                  "propertyName": "entry_type"
                },
                "oneOf": [
                  {
                    "$ref": "#/$defs/SectionWithEducationEntries"
                  },
                  {
                    "$ref": "#/$defs/SectionWithExperienceEntries"
                  },
                  {
                    "$ref": "#/$defs/SectionWithNormalEntries"
                  },
                  {
                    "$ref": "#/$defs/SectionWithOneLineEntries"
                  },
                  {
                    "$ref": "#/$defs/SectionWithPublicationEntries"
                  }
                ]
              },
              "type": "array"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "title": "CurriculumVitae",
      "type": "object",
      "additionalProperties": false
    },
    "Design": {
      "properties": {
        "theme": {
          "const": "classic",
          "default": "classic",
          "description": "The only option is \"Classic\" for now.",
          "title": "Theme name"
        },
        "font": {
          "default": "SourceSans3",
          "description": "The font of the CV.",
          "enum": [
            "SourceSans3",
            "Roboto",
            "EBGaramond"
          ],
          "title": "Font",
          "type": "string"
        },
        "font_size": {
          "default": "10pt",
          "description": "The font size of the CV. It can be 10pt, 11pt, or 12pt.",
          "enum": [
            "10pt",
            "11pt",
            "12pt"
          ],
          "title": "Font Size",
          "type": "string"
        },
        "page_size": {
          "default": "a4paper",
          "description": "The page size of the CV. It can be a4paper or letterpaper.",
          "enum": [
            "a4paper",
            "letterpaper"
          ],
          "title": "Page Size",
          "type": "string"
        },
        "options": {
          "default": null,
          "description": "The options of the theme.",
          "title": "Theme Options",
          "allOf": [
            {
              "$ref": "#/$defs/ClassicThemeOptions"
            }
          ]
        }
      },
      "title": "Design",
      "type": "object",
      "additionalProperties": false
    },
    "EducationEntry": {
      "properties": {
        "start_date": {
          "default": null,
          "description": "The start date of the event in YYYY-MM-DD format.",
          "examples": [
            "2020-09-24"
          ],
          "title": "Start Date",
          "allOf": [
            {
              "pattern": "\\d{4}-?(\\d{2})?-?(\\d{2})?",
              "type": "string"
            }
          ]
        },
        "end_date": {
          "oneOf": [
            {
              "const": "present"
            },
            {
              "pattern": "\\d{4}-?(\\d{2})?-?(\\d{2})?",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The end date of the event in YYYY-MM-DD format. If the event is still ongoing, then the value should be \"present\".",
          "examples": [
            "2020-09-24",
            "present"
          ],
          "title": "End Date"
        },
        "date": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "If the event is a one-day event, then this field should be filled in YYYY-MM-DD format. If the event is a multi-day event, then the start date and end date should be provided instead. All of them can't be provided at the same time.",
          "examples": [
            "2020-09-24",
            "My Custom Date"
          ],
          "title": "Date"
        },
        "highlights": {
          "default": [],
          "description": "The highlights of the event. It will be rendered as bullet points.",
          "examples": [
            "Did this.",
            "Did that."
          ],
          "title": "Highlights",
          "allOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "location": {
          "default": null,
          "description": "The location of the event. It will be shown with the date in the same column.",
          "examples": [
            "Istanbul, Turkey"
          ],
          "title": "Location",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "url": {
          "default": null,
          "title": "Url",
          "allOf": [
            {
              "format": "uri",
              "maxLength": 2083,
              "minLength": 1,
              "type": "string"
            }
          ]
        },
        "institution": {
          "description": "The institution name. It will be shown as bold text.",
          "examples": [
            "Bogazici University"
          ],
          "title": "Institution",
          "type": "string"
        },
        "area": {
          "description": "The area of study. It will be shown as normal text.",
          "title": "Area",
          "type": "string"
        },
        "study_type": {
          "default": null,
          "description": "The type of the degree.",
          "examples": [
            "BS",
            "BA",
            "PhD",
            "MS"
          ],
          "title": "Study Type",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "gpa": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The GPA of the degree.",
          "title": "GPA"
        },
        "transcript_url": {
          "default": null,
          "description": "The URL of the transcript. It will be shown as a link next to the GPA.",
          "examples": [
            "https://example.com/transcript.pdf"
          ],
          "title": "Transcript URL",
          "allOf": [
            {
              "format": "uri",
              "maxLength": 2083,
              "minLength": 1,
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "institution",
        "area"
      ],
      "title": "EducationEntry",
      "type": "object",
      "additionalProperties": false
    },
    "ExperienceEntry": {
      "properties": {
        "start_date": {
          "default": null,
          "description": "The start date of the event in YYYY-MM-DD format.",
          "examples": [
            "2020-09-24"
          ],
          "title": "Start Date",
          "allOf": [
            {
              "pattern": "\\d{4}-?(\\d{2})?-?(\\d{2})?",
              "type": "string"
            }
          ]
        },
        "end_date": {
          "oneOf": [
            {
              "const": "present"
            },
            {
              "pattern": "\\d{4}-?(\\d{2})?-?(\\d{2})?",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The end date of the event in YYYY-MM-DD format. If the event is still ongoing, then the value should be \"present\".",
          "examples": [
            "2020-09-24",
            "present"
          ],
          "title": "End Date"
        },
        "date": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "If the event is a one-day event, then this field should be filled in YYYY-MM-DD format. If the event is a multi-day event, then the start date and end date should be provided instead. All of them can't be provided at the same time.",
          "examples": [
            "2020-09-24",
            "My Custom Date"
          ],
          "title": "Date"
        },
        "highlights": {
          "default": [],
          "description": "The highlights of the event. It will be rendered as bullet points.",
          "examples": [
            "Did this.",
            "Did that."
          ],
          "title": "Highlights",
          "allOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "location": {
          "default": null,
          "description": "The location of the event. It will be shown with the date in the same column.",
          "examples": [
            "Istanbul, Turkey"
          ],
          "title": "Location",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "url": {
          "default": null,
          "title": "Url",
          "allOf": [
            {
              "format": "uri",
              "maxLength": 2083,
              "minLength": 1,
              "type": "string"
            }
          ]
        },
        "company": {
          "description": "The company name. It will be shown as bold text.",
          "title": "Company",
          "type": "string"
        },
        "position": {
          "description": "The position. It will be shown as normal text.",
          "title": "Position",
          "type": "string"
        }
      },
      "required": [
        "company",
        "position"
      ],
      "title": "ExperienceEntry",
      "type": "object",
      "additionalProperties": false
    },
    "NormalEntry": {
      "properties": {
        "start_date": {
          "default": null,
          "description": "The start date of the event in YYYY-MM-DD format.",
          "examples": [
            "2020-09-24"
          ],
          "title": "Start Date",
          "allOf": [
            {
              "pattern": "\\d{4}-?(\\d{2})?-?(\\d{2})?",
              "type": "string"
            }
          ]
        },
        "end_date": {
          "oneOf": [
            {
              "const": "present"
            },
            {
              "pattern": "\\d{4}-?(\\d{2})?-?(\\d{2})?",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The end date of the event in YYYY-MM-DD format. If the event is still ongoing, then the value should be \"present\".",
          "examples": [
            "2020-09-24",
            "present"
          ],
          "title": "End Date"
        },
        "date": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "If the event is a one-day event, then this field should be filled in YYYY-MM-DD format. If the event is a multi-day event, then the start date and end date should be provided instead. All of them can't be provided at the same time.",
          "examples": [
            "2020-09-24",
            "My Custom Date"
          ],
          "title": "Date"
        },
        "highlights": {
          "default": [],
          "description": "The highlights of the event. It will be rendered as bullet points.",
          "examples": [
            "Did this.",
            "Did that."
          ],
          "title": "Highlights",
          "allOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "location": {
          "default": null,
          "description": "The location of the event. It will be shown with the date in the same column.",
          "examples": [
            "Istanbul, Turkey"
          ],
          "title": "Location",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "url": {
          "default": null,
          "title": "Url",
          "allOf": [
            {
              "format": "uri",
              "maxLength": 2083,
              "minLength": 1,
              "type": "string"
            }
          ]
        },
        "name": {
          "description": "The name of the entry. It will be shown as bold text.",
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "NormalEntry",
      "type": "object",
      "additionalProperties": false
    },
    "OneLineEntry": {
      "properties": {
        "start_date": {
          "default": null,
          "description": "The start date of the event in YYYY-MM-DD format.",
          "examples": [
            "2020-09-24"
          ],
          "title": "Start Date",
          "allOf": [
            {
              "pattern": "\\d{4}-?(\\d{2})?-?(\\d{2})?",
              "type": "string"
            }
          ]
        },
        "end_date": {
          "oneOf": [
            {
              "const": "present"
            },
            {
              "pattern": "\\d{4}-?(\\d{2})?-?(\\d{2})?",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The end date of the event in YYYY-MM-DD format. If the event is still ongoing, then the value should be \"present\".",
          "examples": [
            "2020-09-24",
            "present"
          ],
          "title": "End Date"
        },
        "date": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "If the event is a one-day event, then this field should be filled in YYYY-MM-DD format. If the event is a multi-day event, then the start date and end date should be provided instead. All of them can't be provided at the same time.",
          "examples": [
            "2020-09-24",
            "My Custom Date"
          ],
          "title": "Date"
        },
        "highlights": {
          "default": [],
          "description": "The highlights of the event. It will be rendered as bullet points.",
          "examples": [
            "Did this.",
            "Did that."
          ],
          "title": "Highlights",
          "allOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "location": {
          "default": null,
          "description": "The location of the event. It will be shown with the date in the same column.",
          "examples": [
            "Istanbul, Turkey"
          ],
          "title": "Location",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "url": {
          "default": null,
          "title": "Url",
          "allOf": [
            {
              "format": "uri",
              "maxLength": 2083,
              "minLength": 1,
              "type": "string"
            }
          ]
        },
        "name": {
          "description": "The name of the entry. It will be shown as bold text.",
          "title": "Name",
          "type": "string"
        },
        "details": {
          "description": "The details of the entry. It will be shown as normal text.",
          "title": "Details",
          "type": "string"
        }
      },
      "required": [
        "name",
        "details"
      ],
      "title": "OneLineEntry",
      "type": "object",
      "additionalProperties": false
    },
    "PublicationEntry": {
      "properties": {
        "start_date": {
          "default": null,
          "description": "The start date of the event in YYYY-MM-DD format.",
          "examples": [
            "2020-09-24"
          ],
          "title": "Start Date",
          "allOf": [
            {
              "pattern": "\\d{4}-?(\\d{2})?-?(\\d{2})?",
              "type": "string"
            }
          ]
        },
        "end_date": {
          "oneOf": [
            {
              "const": "present"
            },
            {
              "pattern": "\\d{4}-?(\\d{2})?-?(\\d{2})?",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The end date of the event in YYYY-MM-DD format. If the event is still ongoing, then the value should be \"present\".",
          "examples": [
            "2020-09-24",
            "present"
          ],
          "title": "End Date"
        },
        "date": {
          "description": "The date of the publication.",
          "examples": [
            "2021-10-31"
          ],
          "title": "Publication Date",
          "type": "string"
        },
        "highlights": {
          "default": [],
          "description": "The highlights of the event. It will be rendered as bullet points.",
          "examples": [
            "Did this.",
            "Did that."
          ],
          "title": "Highlights",
          "allOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "location": {
          "default": null,
          "description": "The location of the event. It will be shown with the date in the same column.",
          "examples": [
            "Istanbul, Turkey"
          ],
          "title": "Location",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "url": {
          "default": null,
          "title": "Url",
          "allOf": [
            {
              "format": "uri",
              "maxLength": 2083,
              "minLength": 1,
              "type": "string"
            }
          ]
        },
        "title": {
          "description": "The title of the publication. It will be shown as bold text.",
          "title": "Title of the Publication",
          "type": "string"
        },
        "authors": {
          "description": "The authors of the publication in order as a list of strings.",
          "items": {
            "type": "string"
          },
          "title": "Authors",
          "type": "array"
        },
        "doi": {
          "description": "The DOI of the publication.",
          "examples": [
            "10.48550/arXiv.2310.03138"
          ],
          "title": "DOI",
          "type": "string"
        },
        "cited_by": {
          "default": null,
          "description": "The number of citations of the publication.",
          "title": "Cited By",
          "allOf": [
            {
              "type": "integer"
            }
          ]
        },
        "journal": {
          "default": null,
          "description": "The journal or the conference name.",
          "title": "Journal",
          "allOf": [
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "date",
        "title",
        "authors",
        "doi"
      ],
      "title": "PublicationEntry",
      "type": "object",
      "additionalProperties": false
    },
    "SectionWithEducationEntries": {
      "properties": {
        "title": {
          "description": "The title of the section.",
          "examples": [
            "My Custom Section"
          ],
          "title": "Section Title",
          "type": "string"
        },
        "link_text": {
          "default": null,
          "description": "If the section has a link, then what should be the text of the link? If this field is not provided, then the link text will be generated automatically based on the URL.",
          "examples": [
            "view on GitHub",
            "view on LinkedIn"
          ],
          "title": "Link Text",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "entry_type": {
          "const": "EducationEntry",
          "description": "The type of the entries in the section.",
          "title": "Entry Type"
        },
        "entries": {
          "description": "The entries of the section. The format depends on the entry type.",
          "items": {
            "$ref": "#/$defs/EducationEntry"
          },
          "title": "Entries",
          "type": "array"
        }
      },
      "required": [
        "title",
        "entry_type",
        "entries"
      ],
      "title": "SectionWithEducationEntries",
      "type": "object",
      "additionalProperties": false
    },
    "SectionWithExperienceEntries": {
      "properties": {
        "title": {
          "description": "The title of the section.",
          "examples": [
            "My Custom Section"
          ],
          "title": "Section Title",
          "type": "string"
        },
        "link_text": {
          "default": null,
          "description": "If the section has a link, then what should be the text of the link? If this field is not provided, then the link text will be generated automatically based on the URL.",
          "examples": [
            "view on GitHub",
            "view on LinkedIn"
          ],
          "title": "Link Text",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "entry_type": {
          "const": "ExperienceEntry",
          "description": "The type of the entries in the section.",
          "title": "Entry Type"
        },
        "entries": {
          "description": "The entries of the section. The format depends on the entry type.",
          "items": {
            "$ref": "#/$defs/ExperienceEntry"
          },
          "title": "Entries",
          "type": "array"
        }
      },
      "required": [
        "title",
        "entry_type",
        "entries"
      ],
      "title": "SectionWithExperienceEntries",
      "type": "object",
      "additionalProperties": false
    },
    "SectionWithNormalEntries": {
      "properties": {
        "title": {
          "description": "The title of the section.",
          "examples": [
            "My Custom Section"
          ],
          "title": "Section Title",
          "type": "string"
        },
        "link_text": {
          "default": null,
          "description": "If the section has a link, then what should be the text of the link? If this field is not provided, then the link text will be generated automatically based on the URL.",
          "examples": [
            "view on GitHub",
            "view on LinkedIn"
          ],
          "title": "Link Text",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "entry_type": {
          "const": "NormalEntry",
          "description": "The type of the entries in the section.",
          "title": "Entry Type"
        },
        "entries": {
          "description": "The entries of the section. The format depends on the entry type.",
          "items": {
            "$ref": "#/$defs/NormalEntry"
          },
          "title": "Entries",
          "type": "array"
        }
      },
      "required": [
        "title",
        "entry_type",
        "entries"
      ],
      "title": "SectionWithNormalEntries",
      "type": "object",
      "additionalProperties": false
    },
    "SectionWithOneLineEntries": {
      "properties": {
        "title": {
          "description": "The title of the section.",
          "examples": [
            "My Custom Section"
          ],
          "title": "Section Title",
          "type": "string"
        },
        "link_text": {
          "default": null,
          "description": "If the section has a link, then what should be the text of the link? If this field is not provided, then the link text will be generated automatically based on the URL.",
          "examples": [
            "view on GitHub",
            "view on LinkedIn"
          ],
          "title": "Link Text",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "entry_type": {
          "const": "OneLineEntry",
          "description": "The type of the entries in the section.",
          "title": "Entry Type"
        },
        "entries": {
          "description": "The entries of the section. The format depends on the entry type.",
          "items": {
            "$ref": "#/$defs/OneLineEntry"
          },
          "title": "Entries",
          "type": "array"
        }
      },
      "required": [
        "title",
        "entry_type",
        "entries"
      ],
      "title": "SectionWithOneLineEntries",
      "type": "object",
      "additionalProperties": false
    },
    "SectionWithPublicationEntries": {
      "properties": {
        "title": {
          "description": "The title of the section.",
          "examples": [
            "My Custom Section"
          ],
          "title": "Section Title",
          "type": "string"
        },
        "link_text": {
          "default": null,
          "description": "If the section has a link, then what should be the text of the link? If this field is not provided, then the link text will be generated automatically based on the URL.",
          "examples": [
            "view on GitHub",
            "view on LinkedIn"
          ],
          "title": "Link Text",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "entry_type": {
          "const": "PublicationEntry",
          "description": "The type of the entries in the section.",
          "title": "Entry Type"
        },
        "entries": {
          "description": "The entries of the section. The format depends on the entry type.",
          "items": {
            "$ref": "#/$defs/PublicationEntry"
          },
          "title": "Entries",
          "type": "array"
        }
      },
      "required": [
        "title",
        "entry_type",
        "entries"
      ],
      "title": "SectionWithPublicationEntries",
      "type": "object",
      "additionalProperties": false
    },
    "SocialNetwork": {
      "properties": {
        "network": {
          "description": "The social network name.",
          "enum": [
            "LinkedIn",
            "GitHub",
            "Instagram",
            "Orcid"
          ],
          "title": "Social Network",
          "type": "string"
        },
        "username": {
          "description": "The username of the social network. The link will be generated.",
          "title": "Username",
          "type": "string"
        }
      },
      "required": [
        "network",
        "username"
      ],
      "title": "SocialNetwork",
      "type": "object",
      "additionalProperties": false
    }
  },
  "properties": {
    "design": {
      "allOf": [
        {
          "$ref": "#/$defs/Design"
        }
      ],
      "default": {
        "font": "SourceSans3",
        "font_size": "10pt",
        "options": {
          "date_and_location_width": "4.1 cm",
          "header_font_size": "30 pt",
          "margins": {
            "entry_area": {
              "left_and_right": "0.2 cm",
              "vertical_between": "0.12 cm"
            },
            "header": {
              "bottom": "0.2 cm",
              "vertical_between_name_and_connections": "0.2 cm"
            },
            "highlights_area": {
              "left": "0.4 cm",
              "top": "0.10 cm",
              "vertical_between_bullet_points": "0.10 cm"
            },
            "page": {
              "bottom": "2 cm",
              "left": "1.24 cm",
              "right": "1.24 cm",
              "top": "2 cm"
            },
            "section_title": {
              "bottom": "0.2 cm",
              "top": "0.2 cm"
            }
          },
          "primary_color": "#004f90",
          "show_last_updated_date": true,
          "show_timespan_in": [],
          "text_alignment": "left-aligned"
        },
        "page_size": "a4paper",
        "theme": "classic"
      },
      "description": "The design of the CV.",
      "title": "Design"
    },
    "cv": {
      "allOf": [
        {
          "$ref": "#/$defs/CurriculumVitae"
        }
      ],
      "default": {
        "academic_projects": null,
        "awards": null,
        "certificates": null,
        "connections": [],
        "custom_sections": null,
        "education": null,
        "email": null,
        "experience": null,
        "extracurricular_activities": null,
        "interests": null,
        "label": null,
        "location": null,
        "name": "John Doe",
        "other_skills": null,
        "personal_projects": null,
        "phone": null,
        "programming_skills": null,
        "projects": null,
        "publications": null,
        "section_order": null,
        "sections": [],
        "skills": null,
        "social_networks": null,
        "summary": null,
        "test_scores": null,
        "university_projects": null,
        "website": null,
        "work_experience": null
      },
      "description": "The data of the CV.",
      "title": "Curriculum Vitae"
    }
  },
  "title": "RenderCV Input",
  "type": "object",
  "$id": "https://raw.githubusercontent.com/sinaatalay/rendercv/main/schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#"
}