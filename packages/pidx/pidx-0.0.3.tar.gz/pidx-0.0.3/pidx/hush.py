# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_hush.ipynb.

# %% auto 0
__all__ = ['HushedErrors']

# %% ../nbs/01_hush.ipynb 6
import string
from inspect import signature as getsig, getfullargspec as getspec
from itertools import islice, cycle

# %% ../nbs/01_hush.ipynb 8
from typing import TypeGuard

# %% ../nbs/01_hush.ipynb 11
#| export

# %% ../nbs/01_hush.ipynb 13
try: import numpy as np, pandas as pd
except ImportError: ...

# %% ../nbs/01_hush.ipynb 15
#| export


# %% ../nbs/01_hush.ipynb 17
#| export


# %% ../nbs/01_hush.ipynb 19
#| export

# %% ../nbs/01_hush.ipynb 21
class HushedErrors(Exception):
    def __init__(self, *errs, hush: bool = False):
        self.errs = list(errs)
        self.hush = hush
        self.expl = ''

    @classmethod
    def msgs(cls, *errs: Exception):
        return '\n'.join([f'{type(e).__name__}:\t{e}' for e in errs])
    
    def add(self, *errs):
        self.errs.extend(list(errs))

    def msg(self, msg: str):
        self.expl = msg + '\t'

    def __str__(self):
        return f'{type(self).__name__}:\t{self.expl}{self.msgs(*self.errs)}'
    
    def call(self):
        if not self.hush: raise self

# %% ../nbs/01_hush.ipynb 23
#| export
