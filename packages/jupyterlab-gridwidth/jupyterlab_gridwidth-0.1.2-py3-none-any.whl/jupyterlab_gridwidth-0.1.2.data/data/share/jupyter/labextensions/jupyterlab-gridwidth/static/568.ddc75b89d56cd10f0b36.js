"use strict";(self.webpackChunkjupyterlab_gridwidth=self.webpackChunkjupyterlab_gridwidth||[]).push([[568],{568:(t,e,d)=>{d.r(e),d.d(e,{default:()=>c});var l=d(308),a=d(122),o=d(960);const i=["1-2","1-3","2-3","1-4","2-4","3-4","1-5","2-5","3-5","4-5","1-6","2-6","3-6","4-6","5-6"],c={id:"jupyterlab-gridwidth:plugin",autoStart:!0,requires:[l.ICommandPalette,a.INotebookTracker],activate:(t,e,d)=>{let l;console.log("extension jupyterlab-gridwidth is activating");const a=i.map((t=>`gridwidth-${t}`));for(const c of i){const[i,r]=c.split("-");l=`gridwidth:toggle-${i}-${r}`,t.commands.addCommand(l,{label:`cell to take ${i}/${r} space (toggle)`,execute:()=>(0,o.apply_on_cells)(d,o.Scope.Active,(t=>{(0,o.md_toggle_multi)(t,"tags",`gridwidth-${c}`,a)}))}),e.addItem({command:l,category:"gridwidth"}),t.commands.addKeyBinding({command:l,keys:["Ctrl \\",`Ctrl ${i}`,`Ctrl ${r}`],selector:".jp-Notebook"})}l="gridwidth:cancel",t.commands.addCommand(l,{label:"cancel all gridwidths",execute:()=>(0,o.apply_on_cells)(d,o.Scope.Active,(t=>{console.log(`cancelling all gridwidths for cell ${t.model.id}`),(0,o.md_toggle_multi)(t,"tags","",a)}))}),e.addItem({command:l,category:"gridwidth"}),t.commands.addKeyBinding({command:l,keys:["Ctrl \\","Ctrl 0"],selector:".jp-Notebook"})}}}}]);