<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
# 
# Copyright (C) 2014-2022 NeXus International Advisory Committee (NIAC)
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" name="NXrotation_set" extends="NXobject" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <!--This class stores a set of specifically parameterized NXtransformations which describe
how each object is oriented/rotated with respect to a reference coordinate system.
we should offer here support for d==2, d==3-->
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="c">
            <doc>
                 The cardinality of the set, i.e. the number of value tuples.
            </doc>
        </symbol>
    </symbols>
    <doc>
         Base class to detail a set of rotations, orientations, and disorientations.
         
         For getting a more detailed insight into the discussion of the
         parameterized description of orientations in materials science see:
         
         * `H.-J. Bunge &lt;https://doi.org/10.1016/C2013-0-11769-2&gt;`_
         * `T. B. Britton et al. &lt;https://doi.org/10.1016/j.matchar.2016.04.008&gt;`_
         * `D. Rowenhorst et al. &lt;https://doi.org/10.1088/0965-0393/23/8/083501&gt;`_
         * `A. Morawiec &lt;https://doi.org/10.1007/978-3-662-09156-2&gt;`_
         
         Once orientations are defined one can continue to characterize the
         misorientation and specifically the disorientation which describes the
         rotation that is required to register the lattices of two oriented objects
         (like crystal lattice) into a crystallographic equivalent orientation:
         
         * `R. Bonnet &lt;https://doi.org/10.1107/S0567739480000186&gt;`_
         
         Based on the idea of this NXorientation_set one could equally formulate
         an NXdisorientation_set.
    </doc>
    <field name="depends_on">
        <doc>
             Reference to an instance of NXem_conventions which contextualizes
             how the here reported parameterized quantities can be interpreted.
        </doc>
    </field>
    <!--2D rotations are a special type of 3D rotations and thus treated in 3D
just how to rotate the object into the reference frame defined by depends_on-->
    <field name="crystal_symmetry">
        <doc>
             Point group which defines the symmetry of the crystal.
             This has to be at least a single string.
             In the case that misorientation or disorientation fields are used
             and the two crystal sets resolve for phases with a different
             crystal symmetry, this field has to encode two string.
             In this case the first string is for phase A the second one for phase B.
             An example of this most complex case is the description of the
             disorientation between crystals adjoining a hetero-phase boundary.
        </doc>
    </field>
    <!--how to encode the above (2,) string array or single string constraint-->
    <field name="sample_symmetry">
        <doc>
             Point group which defines an assumed symmetry imprinted upon processing
             the material/sample which could give rise to or may justify to use a
             simplified description of rotations, orientations, misorientations,
             and disorientations via numerical procedures known as symmetrization.
             
             The traditionally used symmetrization operations within the texture
             community in Materials Science, though, are thanks to methodology and
             software improvements no longer strictly needed. Therefore, users are
             encouraged to set the sample_symmetry to 1 (triclinic) and thus assume
             there is no implied additional processing symmetry imprinted.
             
             In practice one often faces situations where indeed these assumed
             symmetries are anyway not fully observed and thus an accepting of
             eventual inaccuracies just for the sake of reporting a simplified
             symmetrized description can be avoided.
        </doc>
    </field>
    <field name="rotation_quaternion" type="NX_FLOAT" units="NX_DIMENSIONLESS">
        <doc>
             The set of rotations expressed in quaternion representation. The assumed
             crystal and sample symmetry point group is 1, triclinic. Rotations which
             should be interpreted as antipodal are not marked as such.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="c"/>
            <dim index="2" value="4"/>
        </dimensions>
    </field>
    <field name="rotation_euler" type="NX_FLOAT" units="NX_ANGLE">
        <doc>
             The set of rotations expressed in Euler angle representation following
             the same applied symmetries as explained for rotation_quaternion.
             To interpret Euler angles correctly it is necessary to inspect the
             conventions behind depends_on to resolve which of the many Euler-angle
             conventions possible (Bunge ZXZ, XYZ, Kocks, Tait, etc.) were used.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="c"/>
            <dim index="2" value="3"/>
        </dimensions>
    </field>
    <!--rotation_rodrigues(NX_FLOAT):
rotation_homochoric(NX_FLOAT):
rotation_axis_angle(NX_FLOAT):-->
    <!--orientation how to rotate the crystal into sample and vice versa obeying crystal and sample symmetry-->
    <field name="is_antipodal" type="NX_BOOLEAN">
        <doc>
             True for all those values which are considered antipodal, 
             false for those which are not considered antipodal.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="orientation_quaternion" type="NX_FLOAT" units="NX_DIMENSIONLESS">
        <doc>
             The set of orientations expressed in quaternion representation and
             obeying symmetry for equivalent cases as detailed in crystal_symmetry
             and sample_symmetry. The supplementary field is_antipodal can be used
             to mark orientations which are antipodal.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="c"/>
            <dim index="2" value="4"/>
        </dimensions>
    </field>
    <field name="orientation_euler" type="NX_FLOAT" units="NX_ANGLE">
        <doc>
             The set of orientations expressed in Euler angle representation following
             the same assumptions like for orientation_quaternion.
             To interpret Euler angles correctly it is necessary to inspect the
             conventions behind depends_on to resolve which of the many Euler-angle
             conventions possible (Bunge ZXZ, XYZ, Kocks, Tait, etc.) were used.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="c"/>
            <dim index="2" value="3"/>
        </dimensions>
    </field>
    <field name="orientation_busing_levy" type="NX_FLOAT" units="NX_ANGLE">
        <doc>
             This will follow the Busing-Levy convention:
             W. R. Busing and H. A. Levy (1967). Acta Cryst. 22, 457-464
        </doc>
        <dimensions rank="2">
            <dim index="1" value="3"/>
            <dim index="2" value="3"/>
        </dimensions>
    </field>
    <field name="ub_matrix_busing_levy" type="NX_FLOAT">
        <doc>
             UB matrix of single crystal sample using Busing-Levy convention:
             W. R. Busing and H. A. Levy (1967). Acta Cryst. 22, 457-464. This is
             the multiplication of the orientation_matrix, given above,
             with the :math:`B` matrix which
             can be derived from the lattice constants.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="3"/>
            <dim index="2" value="3"/>
        </dimensions>
    </field>
    <!--orientation_rodrigues(NX_FLOAT):
orientation_homochoric(NX_FLOAT):
orientation_axis_angle(NX_FLOAT):-->
    <!--misorientation between two orientations, ignoring if the angular argument
is smallest.-->
    <field name="misorientation_quaternion" type="NX_FLOAT" units="NX_DIMENSIONLESS">
        <doc>
             The set of misorientations expressed in quaternion representation and
             obeying symmetry operations for equivalent misorientations
             as defined by crystal_symmetry and sample_symmetry.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="c"/>
            <dim index="2" value="4"/>
        </dimensions>
    </field>
    <field name="misorientation_angle" type="NX_FLOAT" units="NX_ANGLE">
        <doc>
             Misorientation angular argument (eventually signed) following the same
             symmetry assumptions as expressed for the field misorientation_quaternion.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="misorientation_axis" type="NX_FLOAT" units="NX_DIMENSIONLESS">
        <doc>
             Misorientation axis (normalized) and signed following the same
             symmetry assumptions as expressed for the field misorientation_angle.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="c"/>
            <dim index="2" value="3"/>
        </dimensions>
    </field>
    <!--disorientation, misorientation with smallest angular argument inside
fundamental zone of SO3 for given crystal and sample symmetry-->
    <field name="disorientation_quaternion" type="NX_FLOAT" units="NX_DIMENSIONLESS">
        <doc>
             The set of disorientation expressed in quaternion representation and
             obeying symmetry operations for equivalent misorientations
             as defined by crystal_symmetry and sample_symmetry.
        </doc>
    </field>
    <field name="disorientation_angle" type="NX_FLOAT" units="NX_ANGLE">
        <doc>
             Disorientation angular argument (should not be signed, see
             `D. Rowenhorst et al. &lt;https://doi.org/10.1088/0965-0393/23/8/083501&gt;`_)
             following the same symmetry assumptions as expressed for the field
             disorientation_quaternion.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="disorientation_axis" type="NX_FLOAT" units="NX_DIMENSIONLESS">
        <doc>
             Disorientation axis (normalized) following the same symmetry assumptions
             as expressed for the field disorientation_quaternion.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="c"/>
            <dim index="2" value="3"/>
        </dimensions>
    </field>
    <!--e.g. in this way one could easily, efficiently, store and map familiar habits of microscopists
to store e.g. orientations of measurement points or of grains via a (c := Ngrains, n_p := 3)
matrix of Bunge-Euler angles, or of (c := Ngrains, n_p := 4) matrix of quaternions.-->
    <!--the benefit of such a representation is that with a known NXorientation_set base class one can implement a common parameterization transformation library (of which several already exist) in the microstructure modelling communities so that a program can read the information in the (NXorientation_set) instance and automatically transform/compute between different parameterizations. Super relevant for interoperability e.g. in SEM/EBSD, where this was a long standing issue and right now the most frequently accepted consensus is to report either Bunge-Euler angles or quaternions and then use existent transformation libraries (as implemented by e.g. Marc de Graeff for SEM/EBSD and used by many but not yet the majority of people in the computational materials modelling community within crystal plasticity, crystal growth modeling, DREAM.3D)-->
</definition>
