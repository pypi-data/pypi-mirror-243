{"version":3,"file":"f7a0e9f51b8d567c696b.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/features/cssTemplates/CssTemplateModal.tsx","webpack://superset/./src/pages/CssTemplateList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\n\nimport Icons from 'src/components/Icons';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport Modal from 'src/components/Modal';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { CssEditor } from 'src/components/AsyncAceEditor';\n\nimport { TemplateObject } from './types';\n\ninterface CssTemplateModalProps {\n  addDangerToast: (msg: string) => void;\n  cssTemplate?: TemplateObject | null;\n  onCssTemplateAdd?: (cssTemplate?: TemplateObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledCssTemplateTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\n\nconst StyledCssEditor = styled(CssEditor)`\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ theme }) => theme.colors.secondary.light2};\n`;\n\nconst TemplateContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 10}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    width: 50%;\n  }\n`;\n\nconst CssTemplateModal: FunctionComponent<CssTemplateModalProps> = ({\n  addDangerToast,\n  onCssTemplateAdd,\n  onHide,\n  show,\n  cssTemplate = null,\n}) => {\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentCssTemplate, setCurrentCssTemplate] =\n    useState<TemplateObject | null>(null);\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const isEditMode = cssTemplate !== null;\n\n  // cssTemplate fetch logic\n  const {\n    state: { loading, resource },\n    fetchResource,\n    createResource,\n    updateResource,\n  } = useSingleViewResource<TemplateObject>(\n    'css_template',\n    t('css_template'),\n    addDangerToast,\n  );\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n  };\n\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentCssTemplate?.id) {\n        const update_id = currentCssTemplate.id;\n        delete currentCssTemplate.id;\n        delete currentCssTemplate.created_by;\n        updateResource(update_id, currentCssTemplate).then(response => {\n          if (!response) {\n            return;\n          }\n\n          if (onCssTemplateAdd) {\n            onCssTemplateAdd();\n          }\n\n          hide();\n        });\n      }\n    } else if (currentCssTemplate) {\n      // Create\n      createResource(currentCssTemplate).then(response => {\n        if (!response) {\n          return;\n        }\n\n        if (onCssTemplateAdd) {\n          onCssTemplateAdd();\n        }\n\n        hide();\n      });\n    }\n  };\n\n  const onTemplateNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    const data = {\n      ...currentCssTemplate,\n      template_name: currentCssTemplate ? currentCssTemplate.template_name : '',\n      css: currentCssTemplate ? currentCssTemplate.css : '',\n    };\n\n    data[target.name] = target.value;\n    setCurrentCssTemplate(data);\n  };\n\n  const onCssChange = (css: string) => {\n    const data = {\n      ...currentCssTemplate,\n      template_name: currentCssTemplate ? currentCssTemplate.template_name : '',\n      css,\n    };\n    setCurrentCssTemplate(data);\n  };\n\n  const validate = () => {\n    if (\n      currentCssTemplate?.template_name.length &&\n      currentCssTemplate?.css?.length\n    ) {\n      setDisableSave(false);\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentCssTemplate?.id ||\n        (cssTemplate && cssTemplate?.id !== currentCssTemplate.id) ||\n        (isHidden && show))\n    ) {\n      if (cssTemplate?.id !== null && !loading) {\n        const id = cssTemplate.id || 0;\n\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentCssTemplate || currentCssTemplate.id || (isHidden && show))\n    ) {\n      setCurrentCssTemplate({\n        template_name: '',\n        css: '',\n      });\n    }\n  }, [cssTemplate]);\n\n  useEffect(() => {\n    if (resource) {\n      setCurrentCssTemplate(resource);\n    }\n  }, [resource]);\n\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n    currentCssTemplate ? currentCssTemplate.template_name : '',\n    currentCssTemplate ? currentCssTemplate.css : '',\n  ]);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={isEditMode ? t('Save') : t('Add')}\n      show={show}\n      width=\"55%\"\n      title={\n        <h4 data-test=\"css-template-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode\n            ? t('Edit CSS template properties')\n            : t('Add CSS template')}\n        </h4>\n      }\n    >\n      <StyledCssTemplateTitle>\n        <h4>{t('Basic information')}</h4>\n      </StyledCssTemplateTitle>\n      <TemplateContainer>\n        <div className=\"control-label\">\n          {t('CSS template name')}\n          <span className=\"required\">*</span>\n        </div>\n        <input\n          name=\"template_name\"\n          onChange={onTemplateNameChange}\n          type=\"text\"\n          value={currentCssTemplate?.template_name}\n        />\n      </TemplateContainer>\n      <TemplateContainer>\n        <div className=\"control-label\">\n          {t('css')}\n          <span className=\"required\">*</span>\n        </div>\n        <StyledCssEditor\n          onChange={onCssChange}\n          value={currentCssTemplate?.css}\n          width=\"100%\"\n        />\n      </TemplateContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(CssTemplateModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { t, SupersetClient } from '@superset-ui/core';\n\nimport rison from 'rison';\nimport moment from 'moment';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport CssTemplateModal from 'src/features/cssTemplates/CssTemplateModal';\nimport { TemplateObject } from 'src/features/cssTemplates/types';\n\nconst PAGE_SIZE = 25;\n\ninterface CssTemplatesListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nfunction CssTemplatesList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: CssTemplatesListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: templatesCount,\n      resourceCollection: templates,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<TemplateObject>(\n    'css_template',\n    t('CSS templates'),\n    addDangerToast,\n  );\n  const [cssTemplateModalOpen, setCssTemplateModalOpen] =\n    useState<boolean>(false);\n  const [currentCssTemplate, setCurrentCssTemplate] =\n    useState<TemplateObject | null>(null);\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n\n  const [templateCurrentlyDeleting, setTemplateCurrentlyDeleting] =\n    useState<TemplateObject | null>(null);\n\n  const handleTemplateDelete = ({ id, template_name }: TemplateObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/css_template/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setTemplateCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', template_name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting %s: %s', template_name, errMsg),\n        ),\n      ),\n    );\n  };\n\n  const handleBulkTemplateDelete = (templatesToDelete: TemplateObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/css_template/?q=${rison.encode(\n        templatesToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected templates: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  function handleCssTemplateEdit(cssTemplate: TemplateObject) {\n    setCurrentCssTemplate(cssTemplate);\n    setCssTemplateModalOpen(true);\n  }\n\n  const initialSort = [{ id: 'template_name', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'template_name',\n        Header: t('Name'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => {\n          let name = 'null';\n\n          if (changedBy) {\n            name = `${changedBy.first_name} ${changedBy.last_name}`;\n          }\n\n          return (\n            <Tooltip\n              id=\"allow-run-async-header-tooltip\"\n              title={t('Last modified by %s', name)}\n              placement=\"right\"\n            >\n              <span>{changedOn}</span>\n            </Tooltip>\n          );\n        },\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).fromNow();\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        accessor: 'created_by',\n        disableSortBy: true,\n        Header: t('Created by'),\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) =>\n          createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleCssTemplateEdit(original);\n          const handleDelete = () => setTemplateCurrentlyDeleting(original);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'edit-action',\n                  tooltip: t('Edit template'),\n                  placement: 'bottom',\n                  icon: 'Edit',\n                  onClick: handleEdit,\n                }\n              : null,\n            canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete template'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n        size: 'xl',\n      },\n    ],\n    [canDelete, canCreate],\n  );\n\n  const menuData: SubMenuProps = {\n    name: t('CSS templates'),\n  };\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('CSS template')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        setCurrentCssTemplate(null);\n        setCssTemplateModalOpen(true);\n      },\n    });\n  }\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  menuData.buttons = subMenuButtons;\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Created by'),\n        key: 'created_by',\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'css_template',\n          'created_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        key: 'search',\n        id: 'template_name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      <CssTemplateModal\n        addDangerToast={addDangerToast}\n        cssTemplate={currentCssTemplate}\n        onCssTemplateAdd={() => refreshData()}\n        onHide={() => setCssTemplateModalOpen(false)}\n        show={cssTemplateModalOpen}\n      />\n      {templateCurrentlyDeleting && (\n        <DeleteModal\n          description={t('This action will permanently delete the template.')}\n          onConfirm={() => {\n            if (templateCurrentlyDeleting) {\n              handleTemplateDelete(templateCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setTemplateCurrentlyDeleting(null)}\n          open\n          title={t('Delete Template?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected templates?',\n        )}\n        onConfirm={handleBulkTemplateDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n\n          return (\n            <ListView<TemplateObject>\n              className=\"css-templates-list-view\"\n              columns={columns}\n              count={templatesCount}\n              data={templates}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              addDangerToast={addDangerToast}\n              addSuccessToast={addSuccessToast}\n              refreshData={refreshData}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(CssTemplatesList);\n"],"names":["StyledActions","styled","span","_ref","theme","colors","primary","base","ActionWrapper","_ref2","grayscale","ActionsBar","_ref3","actions","___EmotionJSX","className","map","action","index","ActionIcon","Icons","icon","tooltip","Tooltip","id","label","title","placement","key","role","tabIndex","onClick","StyledCssTemplateTitle","div","gridUnit","StyledCssEditor","CssEditor","borderRadius","_ref4","secondary","light2","TemplateContainer","_ref5","_ref6","_ref7","_ref8","error","_ref9","_ref10","_ref11","_ref12","withToasts","_ref13","addDangerToast","onCssTemplateAdd","onHide","show","cssTemplate","disableSave","setDisableSave","useState","currentCssTemplate","setCurrentCssTemplate","isHidden","setIsHidden","isEditMode","state","loading","resource","fetchResource","createResource","updateResource","useSingleViewResource","t","hide","useEffect","template_name","css","validate","_currentCssTemplate$c","length","Modal","disablePrimaryButton","onHandledPrimaryAction","onSave","update_id","created_by","then","response","primaryButtonName","width","EditAlt","StyledIcon","PlusLarge","name","onChange","event","target","data","value","type","addSuccessToast","user","resourceCount","templatesCount","resourceCollection","templates","bulkSelectEnabled","hasPerm","fetchData","refreshData","toggleBulkSelect","useListViewResource","cssTemplateModalOpen","setCssTemplateModalOpen","canCreate","canEdit","canDelete","templateCurrentlyDeleting","setTemplateCurrentlyDeleting","initialSort","desc","columns","useMemo","accessor","Header","Cell","row","original","changed_on_delta_humanized","changedOn","changed_by","changedBy","first_name","last_name","size","disableSortBy","created_on","createdOn","date","Date","utc","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","moment","fromNow","createdBy","handleEdit","handleDelete","filter","item","hidden","menuData","subMenuButtons","push","React","buttonStyle","buttons","filters","input","operator","FilterOperator","relationOneMany","unfilteredLabel","fetchSelects","createFetchRelated","createErrorHandler","errMsg","paginate","contains","SubMenu","CssTemplateModal","DeleteModal","description","onConfirm","handleTemplateDelete","SupersetClient","delete","endpoint","open","ConfirmStatusChange","templatesToDelete","rison","json","message","confirmDelete","bulkActions","onSelect","ListView","count","pageSize","disableBulkSelect"],"sourceRoot":""}