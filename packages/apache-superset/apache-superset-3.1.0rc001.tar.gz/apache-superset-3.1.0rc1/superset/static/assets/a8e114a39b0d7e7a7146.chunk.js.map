{"version":3,"file":"a8e114a39b0d7e7a7146.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/features/annotationLayers/AnnotationLayerModal.tsx","webpack://superset/./src/pages/AnnotationLayerList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\n\nimport Icons from 'src/components/Icons';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport Modal from 'src/components/Modal';\nimport withToasts from 'src/components/MessageToasts/withToasts';\n\nimport { AnnotationLayerObject } from './types';\n\ninterface AnnotationLayerModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  layer?: AnnotationLayerObject | null;\n  onLayerAdd?: (layer?: AnnotationLayerObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledAnnotationLayerTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\n\nconst LayerContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 10}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  textarea,\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    width: 50%;\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    width: 100%;\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\n\nconst AnnotationLayerModal: FunctionComponent<AnnotationLayerModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  onLayerAdd,\n  onHide,\n  show,\n  layer = null,\n}) => {\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentLayer, setCurrentLayer] =\n    useState<AnnotationLayerObject | null>();\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const isEditMode = layer !== null;\n\n  // annotation layer fetch logic\n  const {\n    state: { loading, resource },\n    fetchResource,\n    createResource,\n    updateResource,\n  } = useSingleViewResource<AnnotationLayerObject>(\n    'annotation_layer',\n    t('annotation_layer'),\n    addDangerToast,\n  );\n\n  const resetLayer = () => {\n    // Reset layer\n    setCurrentLayer({\n      name: '',\n      descr: '',\n    });\n  };\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n\n    // Reset layer\n    resetLayer();\n\n    onHide();\n  };\n\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentLayer?.id) {\n        const update_id = currentLayer.id;\n        delete currentLayer.id;\n        delete currentLayer.created_by;\n        updateResource(update_id, currentLayer).then(response => {\n          if (!response) {\n            return;\n          }\n\n          hide();\n          addSuccessToast(t('Annotation template updated'));\n        });\n      }\n    } else if (currentLayer) {\n      // Create\n      createResource(currentLayer).then(response => {\n        if (!response) {\n          return;\n        }\n\n        if (onLayerAdd) {\n          onLayerAdd(response);\n        }\n\n        hide();\n        addSuccessToast(t('Annotation template created'));\n      });\n    }\n  };\n\n  const onTextChange = (\n    event:\n      | React.ChangeEvent<HTMLTextAreaElement>\n      | React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { target } = event;\n    const data = {\n      ...currentLayer,\n      name: currentLayer ? currentLayer.name : '',\n      descr: currentLayer ? currentLayer.descr : '',\n    };\n\n    data[target.name] = target.value;\n    setCurrentLayer(data);\n  };\n\n  const validate = () => {\n    if (currentLayer?.name?.length) {\n      setDisableSave(false);\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentLayer?.id ||\n        (layer && layer.id !== currentLayer.id) ||\n        (isHidden && show))\n    ) {\n      if (show && layer && layer.id !== null && !loading) {\n        const id = layer.id || 0;\n\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentLayer || currentLayer.id || (isHidden && show))\n    ) {\n      // Reset layer\n      resetLayer();\n    }\n  }, [layer, show]);\n\n  useEffect(() => {\n    if (resource) {\n      setCurrentLayer(resource);\n    }\n  }, [resource]);\n\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n    currentLayer ? currentLayer.name : '',\n    currentLayer ? currentLayer.descr : '',\n  ]);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={isEditMode ? t('Save') : t('Add')}\n      show={show}\n      width=\"55%\"\n      title={\n        <h4 data-test=\"annotation-layer-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode\n            ? t('Edit annotation layer properties')\n            : t('Add annotation layer')}\n        </h4>\n      }\n    >\n      <StyledAnnotationLayerTitle>\n        <h4>{t('Basic information')}</h4>\n      </StyledAnnotationLayerTitle>\n      <LayerContainer>\n        <div className=\"control-label\">\n          {t('Annotation layer name')}\n          <span className=\"required\">*</span>\n        </div>\n        <input\n          name=\"name\"\n          onChange={onTextChange}\n          type=\"text\"\n          value={currentLayer?.name}\n        />\n      </LayerContainer>\n      <LayerContainer>\n        <div className=\"control-label\">{t('description')}</div>\n        <textarea\n          name=\"descr\"\n          value={currentLayer?.descr}\n          placeholder={t('Description (this can be seen in the list)')}\n          onChange={onTextChange}\n        />\n      </LayerContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(AnnotationLayerModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport rison from 'rison';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport AnnotationLayerModal from 'src/features/annotationLayers/AnnotationLayerModal';\nimport { AnnotationLayerObject } from 'src/features/annotationLayers/types';\n\nconst PAGE_SIZE = 25;\nconst MOMENT_FORMAT = 'MMM DD, YYYY';\n\ninterface AnnotationLayersListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nfunction AnnotationLayersList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: AnnotationLayersListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: layersCount,\n      resourceCollection: layers,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AnnotationLayerObject>(\n    'annotation_layer',\n    t('Annotation layers'),\n    addDangerToast,\n  );\n\n  const [annotationLayerModalOpen, setAnnotationLayerModalOpen] =\n    useState<boolean>(false);\n  const [currentAnnotationLayer, setCurrentAnnotationLayer] =\n    useState<AnnotationLayerObject | null>(null);\n\n  const [layerCurrentlyDeleting, setLayerCurrentlyDeleting] =\n    useState<AnnotationLayerObject | null>(null);\n\n  const handleLayerDelete = ({ id, name }: AnnotationLayerObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setLayerCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkLayerDelete = (layersToDelete: AnnotationLayerObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/?q=${rison.encode(\n        layersToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected layers: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n\n  function handleAnnotationLayerEdit(layer: AnnotationLayerObject | null) {\n    setCurrentAnnotationLayer(layer);\n    setAnnotationLayerModalOpen(true);\n  }\n\n  const initialSort = [{ id: 'name', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        Cell: ({\n          row: {\n            original: { id, name },\n          },\n        }: any) => {\n          let hasHistory = true;\n\n          try {\n            useHistory();\n          } catch (err) {\n            // If error is thrown, we know not to use <Link> in render\n            hasHistory = false;\n          }\n\n          if (hasHistory) {\n            return <Link to={`/annotationlayer/${id}/annotation`}>{name}</Link>;\n          }\n\n          return <a href={`/annotationlayer/${id}/annotation`}>{name}</a>;\n        },\n      },\n      {\n        accessor: 'descr',\n        Header: t('Description'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on: changedOn },\n          },\n        }: any) => {\n          const date = new Date(changedOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).format(MOMENT_FORMAT);\n        },\n        Header: t('Last modified'),\n        accessor: 'changed_on',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).format(MOMENT_FORMAT);\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n      },\n      {\n        accessor: 'created_by',\n        disableSortBy: true,\n        Header: t('Created by'),\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) =>\n          createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleAnnotationLayerEdit(original);\n          const handleDelete = () => setLayerCurrentlyDeleting(original);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'edit-action',\n                  tooltip: t('Edit template'),\n                  placement: 'bottom',\n                  icon: 'Edit',\n                  onClick: handleEdit,\n                }\n              : null,\n            canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete template'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n        size: 'xl',\n      },\n    ],\n    [canDelete, canCreate],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Annotation layer')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAnnotationLayerEdit(null);\n      },\n    });\n  }\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Created by'),\n        key: 'created_by',\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'annotation_layer',\n          'created_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        key: 'search',\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  const emptyState = {\n    title: t('No annotation layers yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAnnotationLayerEdit(null),\n    buttonText: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation layer')}\n      </>\n    ),\n  };\n\n  const onLayerAdd = (id?: number) => {\n    window.location.href = `/annotationlayer/${id}/annotation`;\n  };\n\n  const onModalHide = () => {\n    refreshData();\n    setAnnotationLayerModalOpen(false);\n  };\n\n  return (\n    <>\n      <SubMenu name={t('Annotation layers')} buttons={subMenuButtons} />\n      <AnnotationLayerModal\n        addDangerToast={addDangerToast}\n        layer={currentAnnotationLayer}\n        onLayerAdd={onLayerAdd}\n        onHide={onModalHide}\n        show={annotationLayerModalOpen}\n      />\n      {layerCurrentlyDeleting && (\n        <DeleteModal\n          description={t('This action will permanently delete the layer.')}\n          onConfirm={() => {\n            if (layerCurrentlyDeleting) {\n              handleLayerDelete(layerCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setLayerCurrentlyDeleting(null)}\n          open\n          title={t('Delete Layer?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected layers?')}\n        onConfirm={handleBulkLayerDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n\n          return (\n            <ListView<AnnotationLayerObject>\n              className=\"annotation-layers-list-view\"\n              columns={columns}\n              count={layersCount}\n              data={layers}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              addDangerToast={addDangerToast}\n              addSuccessToast={addSuccessToast}\n              emptyState={emptyState}\n              refreshData={refreshData}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AnnotationLayersList);\n"],"names":["StyledActions","styled","span","_ref","theme","colors","primary","base","ActionWrapper","_ref2","grayscale","ActionsBar","_ref3","actions","___EmotionJSX","className","map","action","index","ActionIcon","Icons","icon","tooltip","Tooltip","id","label","title","placement","key","role","tabIndex","onClick","StyledAnnotationLayerTitle","div","gridUnit","LayerContainer","_ref4","_ref5","_ref6","error","_ref7","_ref8","_ref9","light2","_ref10","_ref11","light1","withToasts","_ref12","addDangerToast","addSuccessToast","onLayerAdd","onHide","show","layer","disableSave","setDisableSave","useState","currentLayer","setCurrentLayer","isHidden","setIsHidden","isEditMode","state","loading","resource","fetchResource","createResource","updateResource","useSingleViewResource","t","resetLayer","name","descr","hide","onTextChange","event","target","data","value","useEffect","validate","_currentLayer$name","length","Modal","disablePrimaryButton","onHandledPrimaryAction","onSave","update_id","created_by","then","response","primaryButtonName","width","EditAlt","css","StyledIcon","PlusLarge","onChange","type","placeholder","MOMENT_FORMAT","user","resourceCount","layersCount","resourceCollection","layers","bulkSelectEnabled","hasPerm","fetchData","refreshData","toggleBulkSelect","useListViewResource","annotationLayerModalOpen","setAnnotationLayerModalOpen","currentAnnotationLayer","setCurrentAnnotationLayer","layerCurrentlyDeleting","setLayerCurrentlyDeleting","canCreate","canEdit","canDelete","handleAnnotationLayerEdit","initialSort","desc","columns","useMemo","accessor","Header","Cell","row","original","hasHistory","useHistory","err","Link","to","href","changed_on","changedOn","date","Date","utc","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","moment","format","size","created_on","createdOn","disableSortBy","createdBy","first_name","last_name","handleEdit","handleDelete","filter","item","hidden","subMenuButtons","push","React","buttonStyle","filters","input","operator","FilterOperator","relationOneMany","unfilteredLabel","fetchSelects","createFetchRelated","createErrorHandler","errMsg","paginate","contains","emptyState","image","buttonAction","buttonText","SubMenu","buttons","AnnotationLayerModal","window","location","onModalHide","DeleteModal","description","onConfirm","handleLayerDelete","SupersetClient","delete","endpoint","open","ConfirmStatusChange","layersToDelete","rison","json","message","confirmDelete","bulkActions","onSelect","ListView","count","pageSize","disableBulkSelect"],"sourceRoot":""}