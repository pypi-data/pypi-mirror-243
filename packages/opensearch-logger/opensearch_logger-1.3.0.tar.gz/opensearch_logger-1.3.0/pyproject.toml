[build-system]
requires = [
    "flit_core >=3.2,<4",
    # "setuptools",
    # "wheel",
]
build-backend = "flit_core.buildapi"
# build-backend = "setuptools.build_meta"

[project]
name = "opensearch-logger"
version = "1.3.0"
description = "OpenSearch logging handler"
readme = "README.md"
requires-python = ">=3.6"
license = { file = "LICENSE.md" }
keywords = ["opensearch", "logging", "handler", "logger"]
authors = [
  {name = "vduseev", email = "vagiz@duseev.com"},
  {name = "IMInterne", email = "equipe_interne@innovmetric.com"},
]
maintainers = [{name = "vduseev", email = "vagiz@duseev.com"}]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Topic :: System :: Logging",
  "Topic :: Software Development :: Libraries",
  "Topic :: Internet :: Log Analysis",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
dependencies = ["opensearch-py"]

[project.urls]
documentation = "https://github.com/vduseev/opensearch-logger"
homepage = "https://github.com/vduseev/opensearch-logger"
repository = "https://github.com/vduseev/opensearch-logger"

[project.optional-dependencies]
dev = [
  "bump2version",
  "flake8",
  "flake8-blind-except",
  "flake8-bugbear",
  "flake8-comprehensions",
  "flake8-docstrings",
  "flake8-import-order",
  "flake8-polyfill",
  "flit",
  "mypy",
  "pytest",
  "pytest-cov",
  "radon",
  "pytest-mypy",
  "black",
]

[tool.black]
line-length = 78

[tool.coverage]
fail_under = 95

[tool.coverage.run]
branch = true
source = [
    "opensearch_logger"
]
omit = [
    "tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
