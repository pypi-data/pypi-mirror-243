# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/12_iter.ipynb.

# %% auto 0
__all__ = ['isiternotstrbytes', 'isiternotstr', 'notiterstr', 'iternotstr']

# %% ../nbs/12_iter.ipynb 4
from typing import TypeGuard

from typing import Iterable

# %% ../nbs/12_iter.ipynb 5
from .atyp import sbytes, notsbytes, StrBytes, NotStrBytes
from .core import isiter
from .strs import notstrbytes

# %% ../nbs/12_iter.ipynb 7
def isiternotstrbytes(x) -> TypeGuard[Iterable[notsbytes]]:
    '''Checks if `x` is an iterable containing elements other than strings or bytes.
    
    See Also
    --------
    isiternotstr : Alias for `isiternotstrbytes`.
    notiterstr : Alias for `isiternotstrbytes`.
    iternotstr : Alias for `isiternotstrbytes`.
    '''
    return isiter(x) and notstrbytes(x)    


def isiternotstr(x) -> TypeGuard[Iterable[notsbytes]]:
    '''Checks if `x` is an iterable containing elements other than strings or bytes.
    
    See Also
    --------
    isiternotstrbytes : Alias for `isiternotstr`.
    notiterstr : Alias for `isiternotstr`.
    iternotstr : Alias for `isiternotstr`.
    '''
    return isiternotstrbytes(x)


def notiterstr(x) -> TypeGuard[Iterable[notsbytes]]:
    '''Checks if `x` is an iterable containing elements other than strings or bytes.
    
    See Also
    --------
    isiternotstrbytes : Alias for `notiterstr`.
    isiternotstr : Alias for `notiterstr`.
    iternotstr : Alias for `notiterstr`.
    '''
    return isiternotstrbytes(x)


def iternotstr(x) -> TypeGuard[Iterable[notsbytes]]:
    '''Checks if `x` is an iterable containing elements other than strings or bytes.
    
    See Also
    --------
    isiternotstrbytes : Alias for `iternotstr`.
    isiternotstr : Alias for `iternotstr`.
    notiterstr : Alias for `iternotstr`.
    '''
    return isiternotstrbytes(x)
