# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/99_misc.ipynb.

# %% auto 0
__all__ = ['isin', 'arein', 'isna', 'notna']

# %% ../nbs/99_misc.ipynb 4
from typing import Any, Type, Union, Callable, Literal, Iterable, TypeAlias, TypeGuard, ParamSpec

try: import pandas as pd
except ImportError: pd = None


from .core import isiter, isnone, notnone
from .isnp import isnpnan
from .ispd import ispdna, pdna

# %% ../nbs/99_misc.ipynb 6
def isin(x, refs: Iterable) -> bool: return x in refs
def arein(x: Iterable, refs: Iterable) -> bool:
    return isiter(x) and isiter(refs) and all(isin(y, refs) for y in x)

def isna(x) -> TypeGuard[pdna]:
    if notnone(pd): return pd.isna(x)
    return isnone(x) or isnpnan(x) or ispdna(x)

def notna(x) -> TypeGuard[Any]:
    if notnone(pd): return pd.notna(x)
    return not isna(x)
