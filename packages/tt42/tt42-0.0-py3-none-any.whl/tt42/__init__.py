import pyperclip as pp


def n1():
    pp.copy('''X = '-0,616; -0,238; 0,173; -0,255; 0,531; 0,718; -0,161; 0,371; -1,014; -0,413; -1,571; 0,485; 0,486; 0,688; -0,944; 0,155; 0,003; 0,111; 0,752; 0,783; -0,102; -0,74; -2,097; 1,349; -0,044; -0,617; -0,782; -0,873; -0,995; -1,256; -0,596'
Y = '-1,34; -0,25; 0,101; -0,626; -0,088; 0,539; -0,451; 0,233; -1,186; -0,423; -1,329; 0,231; 0,209; 0,638; -0,274; -0,491; -0,319; 0,294; 0,895; 1,164; -0,57; -1,078; -1,526; 1,491; 0,182; -0,31; -1,001; -0,969; -0,918; -0,904; -0,595'
a = 0.93

X = [float(i.replace(',', '.')) for i in X.split(';')]
Y = [float(i.replace(',', '.')) for i in Y.split(';')]

p = np.corrcoef(X, Y)[0][1]
N = scs.norm.isf((1 - a) / 2)
h = np.tanh(np.arctanh(p) + 1 / (len(X) - 3)**0.5 * N)

print(f'Выборочный к кор: {round(p, 3)}')
print(f'Верхняя граница: {round(h, 3)}')''')


def n2():
    pp.copy('''chastota = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 1, 1, 3, 4, 4, 5, 4, 6, 6, 11, 9, 19, 23, 25, 33, 36, 36, 46, 46, 49, 58, 90, 76, 66, 69, 75, 68, 44, 39, 21, 16, 5, 2, 1, 0, 0, 0]
D = [1, 21]

X = []
for i in range(len(chastota)):
    X += [i] * chastota[i]
n = len(X)
X = np.array(X) / 100 

len_X = np.log(abs(X)).sum()
maxz = -10**10

for i in range(D[0], D[1]):
    len_X1 = (np.log(1 - abs(X**i))).sum()

    for j in range(D[0], D[1]):
        a = n * np.log(i) + n * np.log(j) + (i - 1) * len_X + (j - 1) * len_X1

        if a > maxz:
            maxz = a
            AB = [i, j]

print('A =', AB[0])
print('B =', AB[1])

x = sp.Symbol('x', positive = True)
f = AB[0] * AB[1] * x**(AB[0] - 1) * (1 - x**AB[0])**(AB[1] - 1)
print('E(X) =', sp.integrate(x * f, [x, 0, 1]).evalf(3))

q = np.array(sp.solve(sp.integrate(f, [x, 0, x]).subs(x, x**(1 / AB[0])) - 0.2))
print('Квантиль =', q[q <= 1]**(1 / AB[0]))''')