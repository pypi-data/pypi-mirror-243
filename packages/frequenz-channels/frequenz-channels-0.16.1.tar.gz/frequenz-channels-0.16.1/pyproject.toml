[build-system]
requires = ["setuptools == 65.3.0", "setuptools_scm[toml] == 7.0.5", "wheel"]
build-backend = "setuptools.build_meta"


[project]
name = "frequenz-channels"
description = "Channel implementations for Python"
readme = "README.md"
license = { text = "MIT" }
keywords = ["frequenz", "channel"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Software Development :: Libraries",
]
requires-python = ">= 3.11, < 4"
dependencies = ["watchfiles >= 0.15.0, < 0.20.0"]
dynamic = ["version"]

[[project.authors]]
name = "Frequenz Energy-as-a-Service GmbH"
email = "floss@frequenz.com"

[project.optional-dependencies]
docs = [
  "mike == 1.1.2",
  "mkdocs-gen-files == 0.5.0",
  "mkdocs-literate-nav == 0.6.0",
  "mkdocs-material == 9.1.17",
  "mkdocs-section-index == 0.3.5",
  "mkdocstrings[python] == 0.22.0",
]

[project.urls]
Changelog = "https://github.com/frequenz-floss/frequenz-channels-python/releases"
Repository = "https://github.com/frequenz-floss/frequenz-channels-python"
Issues = "https://github.com/frequenz-floss/frequenz-channels-python/issues"
Support = "https://github.com/frequenz-floss/frequenz-channels-python/discussions/categories/support"

[tool.setuptools]
include-package-data = true

[tool.setuptools_scm]
version_scheme = "post-release"

[tool.pylint.similarities]
ignore-comments = ['yes']
ignore-docstrings = ['yes']
ignore-imports = ['no']
min-similarity-lines = 40

[tool.pylint.messages_control]
# disable wrong-import-order, ungrouped-imports because it conflicts with isort
disable = ["too-few-public-methods", "wrong-import-order", "ungrouped-imports"]
[tool.pylint.'DESIGN']
max-attributes = 12

[tool.isort]
profile = "black"
line_length = 88
src_paths = ["src", "examples", "tests"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
required_plugins = ["pytest-asyncio", "pytest-mock"]
markers = [
  "integration: integration tests (deselect with '-m \"not integration\"')",
]

[[tool.mypy.overrides]]
module = ["async_solipsism", "async_solipsism.*"]
ignore_missing_imports = true
