name: Git builds

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Only trigger manually
on: workflow_dispatch

jobs:
  simgrid-regular-ubuntu:
    runs-on: ${{ matrix.config.os }}-latest
    strategy:
        matrix:
          config:
          - { name: "Ubuntu gcc", os: ubuntu, cc: "gcc", cxx: "g++", generator: "Unix Makefiles", cmake_extra_options: "-DLTO_EXTRA_FLAG=auto" }
          - { name: "MacOS clang", os: macos, cc: "clang", cxx: "clang++", generator: "Unix Makefiles", cmake_extra_options: "-DLTO_EXTRA_FLAG=auto" }
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Init options
        run: |
          echo "CC=${{ matrix.config.cc }}"   >> $GITHUB_ENV
          echo "CXX=${{ matrix.config.cxx }}" >> GITHUB_ENV
      - name: prepare for ubuntu
        if: matrix.config.os == 'ubuntu'
        run: |
          sudo apt-get update && sudo apt-get install ninja-build libboost-dev libboost-context-dev pybind11-dev
      - name: prepare for macos
        if: matrix.config.os == 'macos'
        run: brew install boost eigen pybind11 ninja
      - name: build
        run: |
          mkdir build ; cd build
          cmake -GNinja -Denable_debug=ON -Denable_documentation=OFF -Denable_coverage=OFF \
                -Denable_compile_optimizations=ON -Denable_compile_warnings=ON \
                -Denable_model-checking=OFF -Denable_testsuite_smpi_MBI=OFF \
                -Denable_smpi=ON -Denable_testsuite_smpi_MPICH3=ON \
                -DCMAKE_DISABLE_SOURCE_CHANGES=ON  -DLTO_EXTRA_FLAG="auto" ..
          ninja tests
          ctest --output-on-failure -j$(nproc)
      - name: Create the failure Message
        if: ${{ failure() }}
        run: |
          ver=$(grep set.SIMGRID_VERSION_MINOR CMakeLists.txt|sed 's/[^"]*"//'|sed 's/".*$//') echo "{\"attachments\": [{\"color\": \"#FF0000\", \"text\":\"Failure when building simgrid on ${{ matrix.config.name }}! See ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} \"}]}" > mattermost.json
      - name: Create the success Message
        if: ${{ success() }}
        run: |
          ver=$(grep set.SIMGRID_VERSION_MINOR CMakeLists.txt|sed 's/[^"]*"//'|sed 's/".*$//') echo "{\"attachments\": [{\"color\": \"#00FF00\", \"text\":\"SimGrid built successfully on ${{ matrix.config.name }}! ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} \"}]}" > mattermost.json
      - uses: komarnitskyi/action-mattermost-notification@v0.1.2-beta
        if: ${{ always() }}
        env:
          webhook: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
          channel: ${{ secrets.MATTERMOST_CHANNEL}}
          json: mattermost.json

  simgrid-modelcheck-ubuntu:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: build
        run: |
          sudo apt-get update && sudo apt-get install ninja-build libboost-dev libboost-context-dev pybind11-dev libevent-dev
          mkdir build ; cd build
          cmake -GNinja -Denable_debug=ON -Denable_documentation=OFF -Denable_coverage=OFF \
                -Denable_compile_optimizations=ON -Denable_compile_warnings=ON \
                -Denable_model-checking=ON -Denable_testsuite_smpi_MBI=OFF \
                -Denable_smpi=ON -Denable_testsuite_smpi_MPICH3=OFF \
                -Denable_ns3=OFF \
                -DCMAKE_DISABLE_SOURCE_CHANGES=ON  -DLTO_EXTRA_FLAG="auto" ..
          ninja tests
          ctest --output-on-failure -j$(nproc)
      - name: Create the failure Message
        if: ${{ failure() }}
        run: |
          ver=$(grep set.SIMGRID_VERSION_MINOR CMakeLists.txt|sed 's/[^"]*"//'|sed 's/".*$//') echo "{\"attachments\": [{\"color\": \"#FF0000\", \"text\":\"Failure when building simgrid Modelchecker on ubuntu-stable! See ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} \"}]}" > mattermost.json
      - name: Create the success Message
        if: ${{ success() }}
        run: |
          ver=$(grep set.SIMGRID_VERSION_MINOR CMakeLists.txt|sed 's/[^"]*"//'|sed 's/".*$//') echo "{\"attachments\": [{\"color\": \"#00FF00\", \"text\":\"Simgrid Modelchecker built successfully on ubuntu-stable! ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} \"}]}" > mattermost.json
      - uses: komarnitskyi/action-mattermost-notification@v0.1.2-beta
        if: ${{ always() }}
        env:
          webhook: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
          channel: ${{ secrets.MATTERMOST_CHANNEL}}
          json: mattermost.json
