# This file is auto generated by `generate_declarations.py`. #AUTOGENERATED
# These functions will be moved to be imported from packages when we will add a modularity mechanism.
from classiq.interface.model.quantum_function_declaration import (
    QuantumFunctionDeclaration,
)

QAOA_MIXER_LAYER = QuantumFunctionDeclaration.parse_raw(
    """{
    "name": "qaoa_mixer_layer",
    "param_decls": {
        "num_qubits": {
            "kind": "int"
        },
        "b": {
            "kind": "real"
        }
    },
    "port_declarations": {
        "target": {
            "name": "target",
            "size": {
                "expr": "num_qubits"
            },
            "direction": "inout"
        }
    },
    "operand_declarations": {},
    "positional_arg_declarations": []
}"""
)

QAOA_COST_LAYER = QuantumFunctionDeclaration.parse_raw(
    """{
    "name": "qaoa_cost_layer",
    "param_decls": {
        "num_qubits": {
            "kind": "int"
        },
        "g": {
            "kind": "real"
        },
        "hamiltonian": {
            "kind": "list",
            "element_type": {
                "kind": "struct_instance",
                "name": "PauliTerm"
            }
        },
        "is_st": {
            "kind": "bool"
        }
    },
    "port_declarations": {
        "target": {
            "name": "target",
            "size": {
                "expr": "num_qubits"
            },
            "direction": "inout"
        }
    },
    "operand_declarations": {},
    "positional_arg_declarations": []
}"""
)

QAOA_LAYER = QuantumFunctionDeclaration.parse_raw(
    """{
    "name": "qaoa_layer",
    "param_decls": {
        "num_qubits": {
            "kind": "int"
        },
        "g": {
            "kind": "real"
        },
        "b": {
            "kind": "real"
        },
        "hamiltonian": {
            "kind": "list",
            "element_type": {
                "kind": "struct_instance",
                "name": "PauliTerm"
            }
        },
        "is_st": {
            "kind": "bool"
        }
    },
    "port_declarations": {
        "target": {
            "name": "target",
            "size": {
                "expr": "num_qubits"
            },
            "direction": "inout"
        }
    },
    "operand_declarations": {},
    "positional_arg_declarations": []
}"""
)

QAOA_INIT = QuantumFunctionDeclaration.parse_raw(
    """{
    "name": "qaoa_init",
    "param_decls": {
        "num_qubits": {
            "kind": "int"
        }
    },
    "port_declarations": {
        "target": {
            "name": "target",
            "size": {
                "expr": "num_qubits"
            },
            "direction": "inout"
        }
    },
    "operand_declarations": {},
    "positional_arg_declarations": []
}"""
)

QAOA_PENALTY = QuantumFunctionDeclaration.parse_raw(
    """{
    "name": "qaoa_penalty",
    "param_decls": {
        "num_qubits": {
            "kind": "int"
        },
        "params_list": {
            "kind": "list",
            "element_type": {
                "kind": "real"
            }
        },
        "hamiltonian": {
            "kind": "list",
            "element_type": {
                "kind": "struct_instance",
                "name": "PauliTerm"
            }
        },
        "is_st": {
            "kind": "bool"
        }
    },
    "port_declarations": {
        "target": {
            "name": "target",
            "size": {
                "expr": "num_qubits"
            },
            "direction": "inout"
        }
    },
    "operand_declarations": {},
    "positional_arg_declarations": []
}"""
)

FULL_HEA = QuantumFunctionDeclaration.parse_raw(
    """{
    "name": "full_hea",
    "param_decls": {
        "num_qubits": {
            "kind": "int"
        },
        "is_parametrized": {
            "kind": "list",
            "element_type": {
                "kind": "int"
            }
        },
        "angle_params": {
            "kind": "list",
            "element_type": {
                "kind": "real"
            }
        },
        "connectivity_map": {
            "kind": "list",
            "element_type": {
                "kind": "list",
                "element_type": {
                    "kind": "int"
                }
            }
        },
        "reps": {
            "kind": "int"
        }
    },
    "port_declarations": {
        "x": {
            "name": "x",
            "size": {
                "expr": "num_qubits"
            },
            "direction": "inout"
        }
    },
    "operand_declarations": {
        "operands_1qubit": {
            "name": "operands_1qubit",
            "param_decls": {
                "angle": {
                    "kind": "real"
                }
            },
            "port_declarations": {
                "q": {
                    "name": "q",
                    "size": {
                        "expr": "1"
                    },
                    "direction": "inout"
                }
            },
            "is_list": true
        },
        "operands_2qubit": {
            "name": "operands_2qubit",
            "param_decls": {
                "angle": {
                    "kind": "real"
                }
            },
            "port_declarations": {
                "q1": {
                    "name": "q1",
                    "size": {
                        "expr": "1"
                    },
                    "direction": "inout"
                },
                "q2": {
                    "name": "q2",
                    "size": {
                        "expr": "1"
                    },
                    "direction": "inout"
                }
            },
            "is_list": true
        }
    },
    "positional_arg_declarations": []
}"""
)

__all__ = [
    "QAOA_MIXER_LAYER",
    "QAOA_COST_LAYER",
    "QAOA_LAYER",
    "QAOA_INIT",
    "QAOA_PENALTY",
    "FULL_HEA",
]
