# serializer version: 1
# name: test_snowpark_procedure_flow[.gitignore]
  '''
  .packages/
  .venv/
  app.zip
  __pycache__
  
  '''
# ---
# name: test_snowpark_procedure_flow[__init__.py]
  ''
# ---
# name: test_snowpark_procedure_flow[common.py]
  '''
  def print_hello(name: str):
      return f"Hello {name}!"

  '''
# ---
# name: test_snowpark_procedure_flow[functions.py]
  '''
  from __future__ import annotations

  from common import print_hello


  def hello_function(name: str) -> str:
      return print_hello(name)

  '''
# ---
# name: test_snowpark_procedure_flow[procedures.py]
  '''
  from __future__ import annotations
  
  from common import print_hello
  from snowflake.snowpark import Session
  
  
  def hello_procedure(session: Session, name: str) -> str:
      token = _snowflake.get_oauth_access_token("cred")
      return print_hello(name)
  
  
  def test_procedure(session: Session) -> str:
      token = _snowflake.get_oauth_access_token("cred")
      return "Test procedure"

  '''
# ---
# name: test_snowpark_procedure_flow[requirements.txt]
  '''
  snowflake-snowpark-python
  
  '''
# ---
# name: test_snowpark_procedure_flow[snowflake.yml]
  '''
  definition_version: 1
  snowpark:
    project_name: "my_snowpark_project"
    stage_name: "dev_deployment"
    src: "app/"
    functions:
      - name: hello_function
        handler: "functions.hello_function"
        signature:
          - name: "name"
            type: "string"
        returns: string
    procedures:
      - name: hello_procedure
        handler: "procedures.hello_procedure"
        signature:
          - name: "name"
            type: "string"
        returns: string
        external_access_integration:
          - my_external_access
        secrets:
          cred: my_cred_name
      - name: test_procedure
        handler: "procedures.test_procedure"
        signature: ""
        returns: string
  
  '''
# ---
