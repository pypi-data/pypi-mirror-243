from FuncsForSPO.flanguage.translator.base import *

class Translator(BotMain):
    def __init__(self, text, lang_from='auto_awesome', lang_to='pt', headless=True):
        self.TEXT = text
        self.LANG_FROM = obter_nome_idioma(lang_from)
        self.LANG_TO = obter_nome_idioma(lang_to)
        self.HEADLESS = headless
        super().__init__(self.HEADLESS)
        
    def run(self):
        try:
            self.DRIVER.get('https://translate.google.com.br/')
            espera_elemento_disponivel_e_clica(self.WDW, (By.CSS_SELECTOR, 'button[aria-label="Mais idiomas de origem"]'))
            sleep(1)
            espera_input_limpa_e_envia_send_keys(self.WDW, self.LANG_FROM, (By.CSS_SELECTOR, 'input[aria-label="Pesquisar idiomas"]'))
        except: ...
        
        

idiomas = (
    ("Detectar idioma", "auto_awesome"),
    ("Africâner", "af"),
    ("Aimará", "ay"),
    ("Albanês", "sq"),
    ("Alemão", "de"),
    ("Amárico", "am"),
    ("Árabe", "ar"),
    ("Armênio", "hy"),
    ("Assamês", "as"),
    ("Azerbaijano", "az"),
    ("Bambara", "bm"),
    ("Basco", "eu"),
    ("Bengali", "bn"),
    ("Bielorrusso", "be"),
    ("Birmanês", "my"),
    ("Boiapuri", "bho"),
    ("Bósnio", "bs"),
    ("Búlgaro", "bg"),
    ("Canarês", "kn"),
    ("Catalão", "ca"),
    ("Cazaque", "kk"),
    ("Cebuano", "ceb"),
    ("Chicheua", "ny"),
    ("Chinês (simplificado)", "zh-CN"),
    ("Chinês (tradicional)", "zh-TW"),
    ("Chona", "sn"),
    ("Cingalês", "si"),
    ("Concani", "kok"),
    ("Coreano", "ko"),
    ("Corso", "co"),
    ("Crioulo haitiano", "ht"),
    ("Croata", "hr"),
    ("Curdo (kurmanji)", "ku"),
    ("Curdo (sorâni)", "ckb"),
    ("Dinamarquês", "da"),
    ("Diveí", "dv"),
    ("Dogri", "doi"),
    ("Eslovaco", "sk"),
    ("Esloveno", "sl"),
    ("Espanhol", "es"),
    ("Esperanto", "eo"),
    ("Estoniano", "et"),
    ("Filipino", "fil"),
    ("Finlandês", "fi"),
    ("Francês", "fr"),
    ("Frísio", "fy"),
    ("Gaélico escocês", "gd"),
    ("Galego", "gl"),
    ("Galês", "cy"),
    ("Georgiano", "ka"),
    ("Grego", "el"),
    ("Guarani", "gn"),
    ("Guzerate", "gu"),
    ("Hauçá", "ha"),
    ("Havaiano", "haw"),
    ("Hebraico", "he"),
    ("Hindi", "hi"),
    ("Hmong", "hmn"),
    ("Holandês", "nl"),
    ("Húngaro", "hu"),
    ("Igbo", "ig"),
    ("Iídiche", "yi"),
    ("Ilocano", "ilo"),
    ("Indonésio", "id"),
    ("Inglês", "en"),
    ("Iorubá", "yo"),
    ("Irlandês", "ga"),
    ("Islandês", "is"),
    ("Italiano", "it"),
    ("Japonês", "ja"),
    ("Javanês", "jv"),
    ("Jeje", "ee"),
    ("Khmer", "km"),
    ("Krio", "kri"),
    ("Laosiano", "lo"),
    ("Latim", "la"),
    ("Letão", "lv"),
    ("Lingala", "ln"),
    ("Lituano", "lt"),
    ("Luganda", "lg"),
    ("Luxemburguês", "lb"),
    ("Macedônio", "mk"),
    ("Maithili", "mai"),
    ("Malaiala", "ml"),
    ("Malaio", "ms"),
    ("Malgaxe", "mg"),
    ("Maltês", "mt"),
    ("Maori", "mi"),
    ("Marata", "mr"),
    ("Meiteilon (manipuri)", "mni"),
    ("Mizo", "lus"),
    ("Mongol", "mn"),
    ("Nepalês", "ne"),
    ("Norueguês", "no"),
    ("Oriá", "or"),
    ("Oromo", "om"),
    ("Pachto", "ps"),
    ("Persa", "fa"),
    ("Polonês", "pl"),
    ("Português", "pt"),
    ("Punjabi", "pa"),
    ("Quíchua", "qu"),
    ("Quiniaruanda", "rw"),
    ("Quirguiz", "ky"),
    ("Romeno", "ro"),
    ("Russo", "ru"),
    ("Samoano", "sm"),
    ("Sânscrito", "sa"),
    ("Sepedi", "nso"),
    ("Sérvio", "sr"),
    ("Sessoto", "st"),
    ("Sindi", "sd"),
    ("Somali", "so"),
    ("Suaíli", "sw"),
    ("Sueco", "sv"),
    ("Sundanês", "su"),
    ("Tadjique", "tg"),
    ("Tailandês", "th"),
    ("Tâmil", "ta"),
    ("Tártaro", "tt"),
    ("Tcheco", "cs"),
    ("Telugo", "te"),
    ("Tigrínia", "ti"),
    ("Tsonga", "ts"),
    ("Turco", "tr"),
    ("Turcomano", "tk"),
    ("Twi", "tw"),
    ("Ucraniano", "uk"),
    ("Uigur", "ug"),
    ("Urdu", "ur"),
    ("Uzbeque", "uz"),
    ("Vietnamita", "vi"),
    ("Xhosa", "xh"),
    ("Zulu", "zu")
)

def obter_nome_idioma(abreviacao):
    idioma = next((idioma for idioma in idiomas if idioma[1] == abreviacao), None)
    if idioma:
        return idioma[0]
    else:
        return "Idioma não encontrado"