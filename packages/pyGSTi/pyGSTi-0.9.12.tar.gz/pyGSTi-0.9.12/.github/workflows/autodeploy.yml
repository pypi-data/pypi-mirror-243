# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Deploy new version on pypi.org

on:
  push:
    branches: [ "master" ]
    # Pattern matched against refs/tags
    tags:        
      - 'v*'           # Push events to every tag not containing '/' (use '**' for hierarchical tags)

  # Dont allow running manually from Actions tab -- use manualdeploy for this
  #workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')  # doesn't work -- try using tags: above

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # to fetch all branches and *tags* (needed to get version number correctly)
  
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.10'
          
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.2
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-*
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_ALL_LINUX: ./.github/ci-scripts/before_install.sh

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')   # doesn't work -- try using tags: above
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # to fetch all branches and *tags* (needed to get version number correctly)

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.10'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v' --  doesn't work -> try using tags: above
    #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Publish package on PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
