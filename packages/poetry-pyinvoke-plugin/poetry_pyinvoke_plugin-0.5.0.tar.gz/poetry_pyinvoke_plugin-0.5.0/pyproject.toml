[tool.poetry]
name = "poetry-pyinvoke-plugin"
# managed by poetry-dynamic-versioning plugin
# Run the following to get an example of the version it would generate:
# poetry dynamic-versioning
version = "0.5.0"
description = "A plugin for poetry that allows you to execute scripts defined in your tasks.py using pyinvoke. Inspired by poetry-exec-plugin."
authors = ["neozenith"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/neozenith/poetry-pyinvoke-plugin"
repository = "https://github.com/neozenith/poetry-pyinvoke-plugin"

[tool.poetry.dependencies]
poetry = "^1.6.1"
python = ">=3.8.1,<4"
simple-chalk = "^0.1.0"
invoke = "^2.2.0"
toml = "^0.10.2"


[tool.poetry.plugins."poetry.application.plugin"]
invoke = "poetry_pyinvoke_plugin.plugin:InvokePlugin"
inv = "poetry_pyinvoke_plugin.plugin:InvPlugin"


[tool.poetry.group.dev.dependencies]
md-toc = "^8.2.2"
mypy = "^1.7.1"
flake8 = "^6.1.0"
isort = "^5.12.0"
black = "^23.7.0"
pytest = "^7.4.0"
pytest-mock = "^3.6.1"
types-toml = "^0.1.5"
flake8-docstrings = "^1.7.0"
pytest-cov = "^4.1.0"
coverage = {extras = ["toml"], version = "^7.3.2"}
pytest-xdist = "^3.5.0"
pytest-randomly = "^3.15.0"

[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
style = "semver"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
multi_line_output = 3
import_heading_stdlib = "Standard Library"
import_heading_firstparty = "Our Libraries"
import_heading_thirdparty = "Third Party"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-s -vvv --color=yes"

[tool.coverage.run]
omit = ["tests/*", "**/__init__.py", "tasks.py"]
branch = true

[tool.mypy]
pretty = true
show_error_codes = true
show_column_numbers = true
show_error_context = true
exclude = [
  'tests/'
]
follow_imports = 'silent'
ignore_missing_imports = true

# Work your way up to these:
disallow_incomplete_defs = true
# disallow_untyped_defs = true 
# disallow_untyped_calls = true
# strict = true